# -*- coding: utf-8 -*-
"""
Created on Fri Nov 23 09:25:11 2018

@author: tianye
    
    实现 '样条插值' 所需的方法:
        nearest：最邻近插值法
        zero：阶梯插值
        slinear：线性插值
        quadratic、cubic：2、3阶B样条曲线插值
        
    实现所需的库
        numpy、scipy、matplotlib

    拟合和插值的区别
        简单来说，插值就是根据原有数据进行填充，最后生成的曲线一定过原有点。    
        拟合是通过原有数据，调整曲线系数，使得曲线与已知点集的差别（最小二乘）最小，最后生成的曲线不一定经过原有点。

    x, y为原来的数据（少量）
    xnew为一个数组，条件：x⊆⊆xnew 
    如：x的最小值为-2.931，最大值为10.312；则xnew的左边界要小于-2.931，右边界要大于10.312。当然也最好注意一下间距，最好小于x中的精度
    func为函数，里面的参数x、y、kind，x，y就是原数据的x，y，kind为需要指定的方法
    ynew需要通过xnew数组和func函数来生成
    理论上xnew数组内的值越多，生成的曲线越平滑

"""

# 调用模块
# 调用数组模块
import numpy as np
# 实现插值的模块
from scipy import interpolate
# 画图的模块
import matplotlib.pyplot as plt
# 生成随机数的模块
#import random

# random.randint(0, 10) 生成0-10范围内的一个整型数
# y是一个数组里面有10个随机数，表示y轴的值
#y = np.array([random.randint(0, 30) for _ in range(30)])
orgU0 = np.array([4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 3, 3, 4, 3, 3, 3, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 3, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 2, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 2, 2, 3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 3, 2, 2, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 0, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 2, 6, 11, 17, 24, 30, 36, 42, 47, 51, 56, 60, 63, 65, 67, 68, 68, 68, 68, 67, 67, 63, 61, 57, 53, 49, 44, 38, 32, 27, 19, 12, 3, -2, -9, -18, -27, -36, -45, -54, -63, -74, -82, -91, -100, -109, -118, -126, -135, -142, -150, -158, -165, -171, -178, -183, -188, -192, -197, -200, -203, -205, -206, -206, -206, -207, -207, -206, -205, -202, -200, -196, -191, -186, -180, -173, -166, -157, -149, -140, -129, -118, -106, -94, -83, -68, -54, -43, -34, -22, -8, 6, 21, 37, 52, 68, 85, 101, 117, 133, 151, 167, 183, 198, 214, 226, 235, 243, 254, 268, 279, 287, 294, 305, 316, 327, 336, 347, 356, 365, 373, 381, 387, 392, 396, 398, 401, 402, 403, 402, 401, 398, 395, 391, 385, 381, 375, 367, 359, 349, 336, 324, 312, 297, 283, 266, 248, 231, 214, 193, 173, 152, 130, 109, 86, 61, 38, 15, -7, -33, -57, -79, -99, -123, -148, -171, -192, -217, -242, -265, -282, -293, -307, -325, -345, -364, -384, -405, -422, -439, -455, -470, -485, -498, -510, -520, -531, -540, -547, -553, -558, -562, -564, -565, -565, -562, -559, -555, -550, -543, -534, -524, -513, -502, -489, -476, -468, -462, -453, -437, -423, -406, -388, -367, -344, -321, -298, -274, -248, -221, -197, -176, -156, -129, -99, -69, -39, -8, 22, 52, 81, 110, 141, 172, 201, 229, 258, 287, 316, 343, 368, 395, 421, 446, 469, 491, 513, 535, 555, 574, 591, 607, 623, 636, 648, 660, 670, 678, 685, 690, 693, 695, 696, 696, 695, 694, 691, 687, 682, 674, 666, 656, 645, 634, 621, 609, 598, 587, 569, 549, 528, 506, 489, 471, 452, 429, 404, 377, 358, 341, 318, 289, 259, 228, 196, 163, 128, 91, 57, 23, -12, -50, -85, -119, -154, -190, -226, -259, -290, -325, -358, -389, -420, -448, -468, -490, -514, -540, -567, -594, -618, -639, -659, -680, -699, -715, -731, -745, -756, -766, -776, -784, -789, -792, -794, -794, -793, -792, -787, -781, -775, -765, -753, -739, -723, -705, -687, -669, -648, -623, -596, -565, -535, -504, -472, -437, -400, -362, -326, -286, -244, -202, -160, -120, -80, -46, -8, 30, 72, 116, 159, 202, 243, 283, 325, 365, 403, 440, 478, 514, 549, 582, 614, 644, 674, 701, 726, 749, 772, 792, 809, 825, 839, 849, 859, 865, 870, 872, 873, 871, 867, 860, 851, 839, 826, 811, 793, 772, 751, 728, 704, 674, 642, 610, 576, 540, 502, 465, 426, 384, 340, 297, 255, 210, 162, 116, 80, 56, 36, 2, -36, -79, -124, -162, -201, -240, -281, -324, -366, -407, -449, -489, -530, -568, -603, -638, -671, -704, -734, -762, -787, -811, -834, -854, -871, -887, -901, -911, -920, -925, -930, -931, -931, -927, -921, -913, -901, -889, -876, -858, -841, -821, -798, -774, -745, -715, -685, -653, -623, -586, -549, -510, -472, -429, -383, -339, -293, -248, -198, -149, -100, -52, -4, 40, 79, 118, 161, 209, 257, 304, 348, 392, 437, 481, 522, 561, 601, 640, 675, 705, 728, 756, 782, 806, 829, 854, 878, 897, 912, 924, 936, 947, 957, 965, 971, 975, 975, 975, 972, 965, 956, 946, 933, 918, 899, 877, 854, 830, 802, 771, 740, 711, 682, 648, 608, 567, 526, 482, 435, 389, 343, 296, 244, 194, 145, 96, 43, -10, -61, -109, -156, -196, -239, -282, -322, -348, -366, -390, -420, -459, -500, -542, -580, -620, -660, -699, -736, -769, -800, -829, -856, -880, -902, -923, -943, -960, -975, -986, -997, -1004, -1009, -1011, -1012, -1008, -1003, -994, -984, -971, -954, -935, -916, -894, -867, -838, -808, -777, -742, -705, -672, -639, -600, -559, -512, -465, -418, -369, -317, -265, -215, -165, -111, -55, -1, 50, 102, 155, 206, 258, 307, 356, 405, 454, 497, 539, 580, 625, 666, 706, 745, 781, 816, 847, 875, 903, 929, 950, 971, 989, 1005, 1018, 1028, 1035, 1040, 1043, 1043, 1040, 1034, 1026, 1013, 1000, 985, 966, 945, 920, 893, 865, 834, 800, 765, 729, 689, 648, 604, 561, 516, 467, 416, 366, 317, 266, 210, 158, 106, 53, -1, -59, -113, -165, -218, -271, -323, -372, -420, -469, -518, -564, -606, -649, -691, -731, -768, -802, -836, -869, -899, -925, -949, -972, -993, -1010, -1025, -1036, -1043, -1048, -1053, -1057, -1059, -1057, -1054, -1048, -1039, -1028, -1016, -1003, -986, -964, -940, -915, -888, -859, -826, -800, -775, -746, -709, -669, -628, -586, -542, -495, -445, -399, -356, -313, -260, -207, -157, -109, -57, -2, 50, 102, 153, 206, 259, 310, 359, 408, 458, 505, 550, 594, 638, 680, 721, 759, 795, 831, 865, 894, 923, 950, 975, 997, 1015, 1031, 1046, 1058, 1068, 1076, 1079, 1081, 1081, 1079, 1075, 1067, 1056, 1044, 1031, 1019, 1006, 988, 965, 941, 913, 883, 850, 817, 781, 741, 701, 659, 617, 570, 522, 477, 432, 379, 324, 269, 217, 165, 107, 50, -2, -55, -109, -165, -220, -270, -320, -373, -423, -472, -518, -563, -610, -654, -695, -732, -764, -800, -834, -867, -898, -927, -955, -979, -1001, -1021, -1039, -1054, -1066, -1075, -1082, -1086, -1087, -1086, -1082, -1075, -1065, -1054, -1042, -1024, -1004, -981, -957, -931, -900, -866, -833, -796, -758, -715, -671, -628, -583, -534, -483, -432, -381, -328, -273, -216, -161, -107, -49, 8, 66, 120, 174, 230, 285, 337, 388, 438, 489, 538, 584, 621, 650, 682, 719, 758, 797, 834, 870, 903, 932, 959, 986, 1009, 1031, 1049, 1064, 1077, 1087, 1095, 1099, 1101, 1100, 1097, 1090, 1080, 1067, 1052, 1038, 1023, 1002, 979, 953, 925, 893, 858, 822, 786, 745, 701, 656, 611, 565, 514, 461, 410, 359, 305, 247, 191, 136, 80, 22, -36, -91, -145, -201, -257, -312, -363, -413, -466, -516, -563, -610, -654, -699, -742, -773, -794, -816, -845, -874, -903, -931, -959, -983, -1004, -1024, -1043, -1059, -1072, -1084, -1092, -1099, -1102, -1103, -1101, -1099, -1094, -1086, -1077, -1070, -1060, -1045, -1030, -1011, -988, -960, -931, -900, -868, -832, -794, -755, -716, -672, -626, -578, -530, -482, -432, -378, -325, -272, -222, -181, -147, -110, -62, -8, 49, 107, 161, 213, 258, 289, 319, 354, 397, 446, 494, 541, 580, 609, 641, 671, 701, 735, 774, 813, 850, 885, 917, 946, 975, 1001, 1023, 1044, 1062, 1077, 1090, 1100, 1108, 1112, 1114, 1114, 1110, 1105, 1095, 1083, 1070, 1055, 1039, 1020, 999, 974, 947, 925, 909, 891, 865, 829, 791, 752, 710, 664, 618, 572, 524, 473, 420, 367, 316, 264, 221, 172, 122, 69, 13, -44, -99, -152, -161, -80, -47, -34, -28, -25, -25, -24, -23, -23, -24, -23, -23, -23, -23, -24, -23, -23, -23, -22, -23, -23, -23, -23, -22, -23, -23, -22, -22, -23, -22, -22, -22, -22, -22, -22, -21, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -21, -21, -22, -22, -21, -21, -21, -21, -21])
orgI0 = np.array([19, 10, 9, 8, 23, 17, 11, 11, 26, 17, 22, 24, 15, 28, 19, 21, 26, 15, 27, 20, 19, 27, 16, 10, 17, 24, 14, 26, 32, 34, 32, 17, 10, 8, 13, 25, 15, 24, 30, 30, 16, 26, 32, 28, 15, 9, 8, 17, 24, 14, 9, 7, 7, 9, 25, 17, 21, 25, 14, 26, 32, 26, 14, 9, 23, 31, 34, 34, 18, 25, 31, 35, 35, 36, 36, 36, 34, 18, 25, 31, 30, 17, 9, 19, 23, 15, 26, 32, 24, 13, 9, 6, 7, 6, 6, 6, 37, 34, 16, 11, 7, 6, 6, 7, 6, 6, 18, 22, 13, 9, 6, 15, 28, 34, 34, 24, 21, 27, 15, 9, 18, 28, 33, 18, 23, 23, 13, 8, 22, 31, 28, 15, 26, 46, 41, 24, 30, 34, 23, 13, 10, 24, 18, 19, 25, 13, 26, 32, 34, 35, 35, 36, 36, 31, 17, 27, 19, 19, 26, 13, 24, 30, 34, 35, 35, 21, 21, 30, 34, 19, 11, 14, 28, 32, 34, 26, 17, 28, 33, 22, 12, 8, 6, 21, 30, 28, 17, 26, 32, 43, 52, 25, 13, 9, 7, 7, 23, 31, 25, 13, 9, 6, 17, 21, 12, 7, 21, 30, 33, 34, 19, 23, 31, 34, 34, 34, 35, 36, 35, 36, 22, 12, 8, 6, 21, 30, 33, 35, 35, 36, 35, 36, 35, 36, 35, 30, 15, 9, 21, 30, 33, 34, 34, 22, 19, 26, 14, 23, 30, 28, 15, 8, 20, 21, 14, 26, 31, 22, 12, 8, 6, 20, 20, 15, 26, 32, 34, 34, 33, 17, 23, 21, 11, 7, 6, 6, 5, 7, 23, 30, 33, 34, 34, 35, 34, 35, 32, 17, 24, 20, 17, 26, 15, 9, 15, 28, 32, 34, 34, 28, 14, 8, 36, 44, 34, 17, 27, 19, 10, 7, 6, 6, 16, 21, 12, 8, 19, 29, 29, 15, 25, 31, 28, 15, 8, 20, 29, 29, 15, 8, 6, 12, 24, 14, 22, 20, 19, 47, 42, 38, 36, 32, 17, 23, 20, 12, 7, 22, 30, 32, 31, 16, 24, 31, 33, 33, 17, 10, 15, 28, 32, 34, 34, 28, 16, 26, 17, 9, 7, 6, 21, 30, 26, 13, 8, 21, 19, 10, 6, 6, 18, 20, 13, 26, 31, 33, 28, 14, 8, 19, 29, 32, 34, 35, 23, 18, 26, 15, 8, 6, 5, 6, 39, 55, 55, 42, 38, 35, 26, 18, 27, 16, 8, 6, 6, 4, 20, 19, 10, 8, 23, 17, 8, 6, 5, 4, 4, 10, 26, 31, 19, 19, 24, 13, 24, 30, 26, 15, 26, 31, 23, 13, 8, 23, 18, 17, 27, 32, 18, 10, 13, 25, 14, 8, 15, 27, 31, 32, 22, 11, 7, 5, 19, 19, 14, 26, 31, 33, 34, 32, 17, 8, 15, 22, 13, 24, 30, 32, 32, 15, 8, 6, 6, 4, 4, 17, 28, 28, 15, 23, 19, 10, 8, 23, 15, 18, 24, 13, 7, 5, 4, 8, 22, 15, 28, 41, 21, 27, 19, 17, 28, 32, 33, 22, 11, 8, 23, 30, 41, 56, 62, 32, 27, 31, 31, 16, 23, 20, 15, 26, 31, 21, 18, 26, 14, 7, 6, 9, 23, 30, 32, 33, 31, 16, 8, 6, 10, 24, 13, 21, 29, 29, 15, 23, 30, 26, 14, 26, 30, 13, 6, 24, 30, 32, 33, 34, 34, 19, 19, 24, 13, 8, 17, 27, 31, 34, 35, 23, 13, 8, 22, 17, 17, 24, 12, 8, 6, 4, 4, 4, 19, 28, 31, 32, 34, 33, 27, 13, 8, 5, 14, 26, 30, 32, 46, 58, 65, 82, 75, 69, 72, 85, 74, 69, 67, 70, 85, 75, 70, 67, 66, 65, 66, 65, 67, 67, 66, 77, 81, 71, 49, 56, 51, 41, 36, 34, 47, 50, 41, 36, 20, 10, 6, 4, 4, 17, 18, 13, 25, 0, -15, -6, 0, 2, 3, -6, -5, 1, 2, -21, -34, -31, -46, -52, -55, -51, -35, -29, -40, -50, -54, -56, -56, -57, -56, -56, -38, -29, -26, -26, -26, -41, -39, -30, -27, -25, -24, -25, -29, -44, -34, -8, -8, -10, 0, 2, -6, -4, 1, 3, 3, 4, 6, 21, 14, 8, 6, 6, 21, 43, 49, 41, 56, 45, 38, 41, 56, 62, 49, 58, 76, 70, 67, 65, 72, 83, 74, 68, 67, 70, 85, 91, 80, 79, 86, 75, 69, 76, 83, 74, 85, 91, 93, 91, 76, 70, 78, 83, 72, 68, 80, 88, 89, 75, 69, 67, 67, 65, 65, 65, 65, 65, 64, 65, 52, 40, 35, 34, 34, 32, 28, 15, 23, 16, 8, 6, 4, 4, 3, 3, 2, 4, 3, -6, -17, -22, -23, -24, -24, -24, -24, -26, -26, -30, -46, -35, -28, -10, -7, -36, -33, -28, -25, -26, -25, -26, -34, -44, -34, -28, -26, -26, -25, -26, -26, -25, -25, -24, -24, -6, -7, -10, 0, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 14, 26, 31, 49, 59, 62, 64, 65, 65, 65, 59, 45, 72, 73, 68, 65, 66, 81, 90, 86, 75, 85, 78, 69, 67, 65, 81, 88, 93, 92, 76, 69, 67, 71, 84, 91, 80, 71, 67, 65, 65, 65, 65, 65, 65, 50, 40, 35, 34, 49, 47, 38, 34, 33, 19, 8, 0, -10, 0, 1, 8, 21, 10, -8, -19, -23, -19, -3, -13, -21, -13, -2, -14, -21, -30, -45, -34, -43, -43, -32, -29, -26, -39, -44, -32, -28, -26, -36, -45, -34, -28, -27, -26, -28, -45, -37, -30, -27, -21, -4, 0, -6, -8, 0, 2, 2, 3, 3, 2, 17, 27, 27, 13, 6, 16, 19, 10, 23, 29, 32, 32, 32, 33, 33, 41, 53, 41, 50, 60, 62, 64, 65, 65, 65, 67, 83, 91, 82, 71, 67, 66, 65, 73, 82, 73, 83, 90, 86, 73, 68, 65, 74, 85, 90, 76, 81, 82, 73, 84, 76, 69, 67, 65, 65, 63, 64, 64, 64, 47, 38, 33, 34, 50, 45, 37, 34, 33, 17, 19, 21, 9, 6, 17, 17, 8, 5, 3, 2, 2, -1, -15, -22, -6, -1, 0, 2, -11, -20, -23, -25, -26, -26, -32, -41, -13, -17, -22, -25, -26, -27, -26, -26, -26, -25, -41, -51, -52, -33, -8, -15, -21, -24, -25, -25, -7, -2, 0, -15, -21, -7, 0, 2, 16, 15, 7, 5, 20, 15, 7, 4, 3, 2, 13, 31, 49, 40, 35, 42, 52, 40, 53, 60, 62, 61, 44, 52, 60, 63, 64, 64, 64, 71, 82, 72, 82, 95, 86, 74, 67, 78, 87, 91, 93, 93, 93, 87, 76, 104, 102, 88, 73, 68, 82, 77, 70, 66, 65, 65, 64, 65, 64, 64, 50, 47, 56, 62, 62, 62, 59, 43, 36, 20, 17, 26, 28, 31, 19, 8, 4, 3, 2, 2, -2, -13, -2, 1, -6, -18, -23, -26, -26, -26, -22, -4, -13, -21, -24, -26, -26, -26, -32, -48, -54, -56, -58, -54, -37, -31, -28, -34, -47, -35, -29, -28, -27, -26, -27, -26, -34, -46, -35, -30, -9, -7, -14, -2, 0, 2, 2, 1, 2, -8, -6, 1, 18, 13, 15, 26, 30, 30, 31, 32, 32, 32, 47, 57, 57, 42, 35, 47, 57, 61, 62, 64, 73, 86, 89, 76, 68, 73, 83, 72, 82, 89, 91, 92, 93, 93, 93, 91, 75, 69, 76, 86, 90, 92, 92, 84, 71, 67, 65, 64, 64, 63, 63, 63, 62, 62, 62, 63, 50, 47, 54, 41, 51, 47, 38, 34, 32, 31, 31, 28, 12, 6, 3, 2, 2, 2, 2, 0, 2, 2, 0, -11, -5, -2, -17, -23, -6, -8, -19, -24, -25, -34, -49, -56, -42, -45, -53, -56, -39, -46, -45, -34, -30, -28, -27, -33, -47, -36, -46, -54, -56, -57, -41, -32, -29, -28, -28, -27, -27, -14, -2, 0, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 9, 23, 28, 14, 6, 15, 43, 38, 33, 41, 54, 60, 45, 49, 58, 61, 63, 63, 64, 63, 63, 63, 63, 71, 82, 71, 82, 79, 74, 84, 73, 67, 72, 82, 72, 82, 88, 86, 73, 83, 75, 67, 65, 64, 63, 75, 79, 69, 67, 65, 64, 64, 62, 46, 49, 58, 59, 43, 36, 32, 31, 31, 49, 43, 28, 11, 5, 3, 1, 2, 2, 0, 15, 6, -2, 0, -15, -2, -1, 0, 0, -13, -32, -45, -34, -30, -28, -28, -30, -47, -54, -47, -40, -52, -56, -58, -50, -36, -30, -28, -28, -27, -28, -46, -19, -16, -22, -25, -26, -28, -27, -27, -26, -6, -1, -4, -18, -23, -6, -2, -2, -16, -2, 10, 23, 26, 13, 5, 3, 5, 20, 11, 28, 43, 36, 33, 46, 47, 41, 54, 59, 61, 56, 43, 53, 73, 76, 69, 65, 80, 76, 68, 67, 82, 87, 81, 69, 67, 80, 88, 91, 95, 112, 104, 97, 94, 93, 92, 79, 69, 68, 82, 73, 67, 70, 82, 72, 65, 64, 63, 63, 62, 63, 54, 43, 53, 43, 46, 55, 58, 28, 23, 19, 11, 21, 11, 5, 2, 2, 1, 1, 1, 0, 0, 0, -11, -21, -25, -26, -7, -2, -4, -19, -24, -39, -45, -36, -49, -56, -47, -35, -31, -47, -42, -41, -49, -36, -31, -41, -46, -35, -30, -43, -44, -38, -50, -39, -32, -30, -21, -6, -2, -10, -19, -24, -26, -7, -10, -12, -2, 13, 14, 5, 3, 2, 2, 0, 0, 0, 1, 12, 23, 27, 30, 29, 40, 50, 39, 65, 70, 72, 83, 71, 67, 64, 60, 43, 68, 71, 73, 84, 89, 77, 78, 86, 88, 75, 80, 88, 88, 73, 81, 87, 91, 91, 92, 78, 78, 83, 71, 66, 64, 64, 62, 62, 47, 47, 56, 60, 61, 62, 55, 40, 34, 32, 41, 54, 58, 43, 34, 32, 28, 11, 5, 2, 6, 19, -8, 0, 0, -3, -17, -3, 0, -7, -19, -25])
yU0 = orgU0[550:750]
#yU0 =  np.diff(np.diff(orgU0[550:750]))
#yI0 = np.diff(orgI0[550:750])
yI0 = orgI0[550:750]
#print('y[0] = %d  y[1] = %d  y[2] = %d' % (y[0], y[1], y[2]))

# x是一个数组，表示x轴的值
xU0 = np.array([num for num in range(len(yU0))])
xI0 = np.array([num for num in range(len(yI0))])

# 插值法之后的x轴值，表示从0到9间距为0.5的18个数
xnewU0 = np.arange(0, len(yU0)-1, 0.5)
xnewI0 = np.arange(0, len(yI0)-1, 0.5)

"""
kind方法：
nearest、zero、slinear、quadratic、cubic
实现函数func
"""
#func = interpolate.interp1d(x, y, kind='cubic')
funcU0 = interpolate.interp1d(xU0, yU0, kind='cubic')
funcI0 = interpolate.interp1d(xI0, yI0, kind='cubic')

# 利用xnew和func函数生成ynew，xnew的数量等于ynew数量
ynewU0 = funcU0(xnewU0)
ynewI0 = funcI0(xnewI0)

### 画图部分
fig = plt.figure(figsize=(10, 10))

## 显示网格
# True 显示网格
# linestyle 设置线显示的类型(一共四种)
# color 设置网格的颜色
# linewidth 设置网格线条的粗细
# plt.grid(True, linestyle = "-.", color = "r", linewidth = "3")
plt.grid(True)
# 原图 : 原始数据点
plt.plot(xU0, yU0, 'ro-')
plt.plot(xI0, yI0, 'bo-')
# 拟合之后的平滑曲线图
plt.plot(xnewU0, ynewU0)
plt.plot(xnewI0, ynewI0)
#
plt.show()
