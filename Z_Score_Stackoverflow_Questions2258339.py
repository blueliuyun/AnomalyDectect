# -*- coding: utf-8 -*-
"""
Created on Mon Nov 19 15:02:11 2018

Reference : https://stackoverflow.com/questions/22583391/peak-signal-detection-in-realtime-timeseries-data/43512887#43512887
# Implementation of algorithm from https://stackoverflow.com/a/22640362/6029703

@author: tianye
"""
import numpy as np
import pylab

def thresholding_algo(y, lag, threshold, influence):
    nFlag = 0x00
    signals = np.zeros(len(y)) # 返回长度为 len(y) 的数组。
    filteredY = np.array(y)
    avgFilter = [0]*len(y)
    stdFilter = [0]*len(y)
    avgFilter[lag - 1] = np.mean(y[0:lag])
    stdFilter[lag - 1] = np.std(y[0:lag]) # 计算全局标准差，默认情况下，numpy 计算的是总体标准偏差，ddof = 0
    for i in range(lag, len(y)):
        if abs(y[i] - avgFilter[i-1]) > threshold * stdFilter [i-1]:
            if y[i] > avgFilter[i-1]:                
                signals[i] = 1
                if nFlag == 0x00:
                    nFlag = i
                    print('nFlag = %d' % (nFlag))
            else:
                signals[i] = -1
                if nFlag == 0x00:
                    nFlag = i
                    print('nFlag = %d' % (nFlag))

            """
            @2018-11-20 对异常点的数值进行平滑，以便评估下下个点是否为异常点。
             因为不做平滑，由于当前是个异常点，对平均值、方差影响较大，若是下一个点仍是异常点，可能不会识别。
            """
            filteredY[i] = influence * y[i] + (1 - influence) * filteredY[i-1]
            avgFilter[i] = np.mean(filteredY[(i-lag+1):i+1])
            stdFilter[i] = np.std(filteredY[(i-lag+1):i+1])
        else:
            signals[i] = 0
            filteredY[i] = y[i]
            avgFilter[i] = np.mean(filteredY[(i-lag+1):i+1])
            stdFilter[i] = np.std(filteredY[(i-lag+1):i+1])

    return dict(signals = np.asarray(signals),
                avgFilter = np.asarray(avgFilter),
                stdFilter = np.asarray(stdFilter))
    
# Data
"""
y = np.array([1,1,1.1,1,0.9,1,1,1.1,1,0.9,1,1.1,1,1,0.9,1,1,1.1,1,1,1,1,1.1,0.9,1,1.1,1,1,0.9,
       1,1.1,1,1,1.1,1,0.8,0.9,1,1.2,0.9,1,1,1.1,1.2,1,1.5,1,3,2,5,3,2,1,1,1,0.9,1,1,3,
       2.6,4,3,3.2,2,1,1,0.8,4,4,2,2.5,1,1,1])
"""
y = np.array([186, 192, 194, 197, 194, 192, 190, 188, 186, 184, 177, 175, 164, 158, 149, 143, 130, 122, 107, 94, 81, 64, 53, 34, 19, 6, -8, -21, -40, -51, -68, -83, -96, -113, -124, -134, -145, -156, -167, -179, -186, -194, -203, -209, -212, -214, -222, -220, -224, -229, -229, -227, -229, -229, -224, -218, -222, -220, -212, -203, -199, -190, -184, -175, -167, -152, -141, -119, -111, -98, -85, -74, -57, -38, -27, -8, 6, 21, 36, 51, 66, 77, 89, 96, 111, 122, 132, 143, 152, 158, 164, 171, 179, 179, 184, 186, 194, 194, 194, 194, 192, 192, 190, 186, 179, 177, 175, 169, 160, 156, 149, 137, 128, 117, 104, 92, 79, 64, 49, 34, 17, 6, -10, -23, -38, -53, -68, -85, -100, -111, -122, -137, -145, -156, -171, -177, -186, -190, -201, -205, -212, -216, -222, -222, -224, -229, -229, -231, -231, -231, -227, -227, -222, -218, -214, -207, -199, -194, -188, -182, -167, -154, -145, -132, -117, -107, -87, -74, -59, -47, -25, -12, 0, 14, 29, 49, 62, 74, 83, 96, 107, 119, 128, 137, 143, 149, 158, 164, 171, 177, 177, 182, 186, 190, 192, 192, 192, 190, 186, 188, 186, 182, 179, 171, 164, 154, 145, 139, 132, 117, 104, 92, 83, 68, 51, 38, 21, 6, -6, -23, -36, -53, -72, -83, -92, -111, -122, -132, -143, -154, -169, -177, -184, -194, -194, -205, -212, -214, -218, -220, -229, -229, -231, -233, -229, -227, -224, -224, -222, -218, -212, -203, -194, -188, -182, -175, -167, -156, -141, -128, -113, -100, -85, -72, -59, -42, -25, -12, 2, 19, 36, 47, 59, 70, 85, 100, 111, 119, 132, 139, 147, 156, 162, 169, 177, 182, 184, 186, 188, 192, 190, 194, 197, 197, 190, 188, 182, 177, 177, 169, 162, 156, 149, 139, 130, 117, 107, 92, 77, 66, 49, 36, 19, 4, -12, -27, -44, -53, -68, -83, -100, -115, -124, -132, -143, -156, -167, -175, -182, -190, -199, -201, -207, -216, -218, -220, -224, -229, -229, -231, -229, -229, -229, -224, -224, -218, -214, -209, -201, -197, -188, -179, -169, -158, -147, -137, -122, -109, -98, -81, -66, -49, -34, -19, -8, 8, 25, 38, 53, 68, 79, 89, 100, 111, 122, 134, 145, 149, 156, 160, 169, 173, 177, 182, 186, 188, 192, 192, 192, 192, 190, 188, 186, 184, 179, 179, 169, 158, 152, 147, 134, 126, 113, 100, 89, 74, 62, 44, 27, 14, -2, -12, -27, -44, -57, -74, -89, -104, -115, -128, -139, -149, -158, -173, -184, -192, -197, -203, -205, -214, -218, -220, -220, -227, -229, -229, -229, -227, -227, -224, -222, -220, -214, -205, -201, -192, -186, -177, -164, -156, -143, -128, -115, -102, -89, -72, -59, -42, -27, -14, 2, 17, 34, 44, 59, 74, 87, 96, 109, 122, 130, 141, 149, 156, 164, 167, 175, 179, 184, 186, 190, 190, 194, 192, 194, 194, 190, 188, 184, 179, 175, 169, 169, 158, 149, 137, 130, 119, 109, 94, 79, 66, 53, 36, 23, 10, -8, -23, -38, -51, -66, -81, -94, -107, -119, -130, -143, -156, -164, -173, -179, -186, -194, -203, -209, -216, -218, -220, -220, -224, -227, -231, -233, -231, -229, -224, -222, -222, -216, -212, -203, -197, -190, -182, -173, -164, -147, -134, -122, -109, -98, -79, -64, -53, -36, -19, -6, 10, 23, 40, 49, 66, 77, 92, 102, 113, 124, 132, 139, 149, 154, 164, 173, 182, 179, 182, 179, 188, 194, 194, 194, 194, 188, 184, 182, 184, 179, 175, 167, 160, 149, 141, 134, 124, 113, 94, 85, 70, 57, 42, 23, 12, -6, -21, -32, -49, -64, -83, -96, -109, -119, -128, -143, -154, -162, -175, -184, -190, -199, -203, -209, -212, -218, -222, -222, -224, -229, -224, -227, -229, -224, -224, -220, -216, -212, -212, -201, -194, -184, -177, -167, -154, -141, -130, -117, -102, -89, -77, -57, -44, -32, -14, 0, 14, 29, 44, 57, 70, 81, 96, 104, 119, 130, 134, 145, 149, 156, 160, 167, 175, 182, 182, 184, 186, 190, 186, 188, 190, 190, 188, 186, 184, 177, 175, 175, 169, 164, 152, 145, 137, 128, 115, 104, 96, 81, 70, 59, 44, 27, 14, 0, -10, -25, -38, -51, -68, -85, -94, -109, -115, -128, -141, -154, -162, -169, -177, -184, -192, -199, -203, -212, -216, -220, -220, -224, -229, -231, -231, -235, -233, -227, -229, -227, -224, -218, -216, -207, -199, -194, -188, -179, -167, -156, -139, -126, -115, -104, -87, -72, -53, -42, -27, -10, 2, 21, 36, 53, 68, 79, 89, 102, 113, 126, 134, 145, 152, 158, 167, 175, 177, 182, 188, 188, 194, 194, 197, 194, 192, 190, 186, 182, 179, 173, 167, 158, 149, 141, 132, 119, 104, 94, 77, 62, 47, 25, 12, -2, -14, -34, -49, -66, -83, -98, -109, -119, -132, -145, -160, -171, -177, -190, -194, -199, -205, -207, -220, -222, -222, -227, -229, -224, -227, -227, -227, -222, -220, -214, -209, -203, -201, -190, -182, -175, -164, -152, -139, -128, -115, -100, -85, -72, -57, -47, -32, -14, 2, 19, 34, 44, 57, 68, 81, 94, 102, 115, 122, 132, 137, 145, 149, 162, 167, 171, 175, 175, 179, 182, 186, 186, 186, 186, 188, 188, 188, 169, -859, -4298, -12769, -23335, -29771, -31125, -30281, -26159, -17110, -7619, -4195, -7304, -13350, -21252, -29617, -32767, -26499, -15861, -8966, -6993, -6213, -6894, -11799, -18510, -21207, -18694, -13939, -7961, -1489, 1799, -74, -3741, -5962, -7638, -8619, -5536, 1604, 7400, 8836, 8439, 7691, 5407, 3323, 4480, 8026, 11897, 15990, 18855, 18045, 15182, 13849, 14001, 14526, 17014, 21314, 23813, 23500, 22255, 20311, 18437, 18876, 21096, 23028, 24492, 24764, 22482, 19557, 18460, 18351, 18666, 19977, 20453, 18829, 16521, 14113, 12013, 11555, 11917, 11557, 10734, 9022, 5962, 3428, 2262, 1375, 878, 278, -1621, -4045, -6228, -8161, -9041, -9271, -10134, -11315, -12761, -14811, -16262, -16753, -17140, -17297, -17627, -18653, -19574, -20142, -20419, -19922, -19322, -19234, -19092, -19024, -19015, -18291, -17196, -16185, -15069, -14222, -13577, -12521, -11313, -9916, -8161, -6693, -5482, -4088, -2830, -1546, 134, 1793, 3261, 4778, 6070, 7252, 8707, 10110, 11405, 12823, 13989, 14820, 15737, 16620, 17271, 18036, 18880, 19437, 19879, 20316, 20496, 20592, 20849, 20939, 20809, 20725, 20528, 20020, 19519, 19174, 18687, 18012, 17389, 16684, 15748, 14811, 13963, 12954, 11837, 10839, 9802, 8579, 7415, 6423, 5326, 4019, 2759, 1604, 364, -912, -2050, -3183, -4460, -5703, -6792, -7899, -9073, -10100, -10968, -11915, -12945, -13830, -14608, -15428, -16215, -16830, -17380, -17985, -18518, -18908, -19287, -19664, -19877, -19954, -20059, -20142, -20061, -19885, -19733, -19499, -19114, -18687, -18270, -17742, -17085, -16438, -15765, -14951, -14055, -13157, -12185, -11118, -10072, -9037, -7899, -6693, -5525, -4328, -3061, -1816, -610, 662, 1984, 3293, 4632, 5986, 7246, 8416, 9603, 10760, 11852, 12939, 13991, 14931, 15797, 16645, 17417, 18126, 18818, 19433, 19913, 20301, 20601, 20768, 20881, 20931, 20871, 20704, 20466, 20112, 19656, 19142, 18522, 17794, 16999, 16118, 15143, 14128, 13046, 11882, 10678, 9427, 8111, 6770, 5410, 3998, 2547, 1071, -424, -1898, -3316, -4730, -6121, -7482, -8821, -10121, -11347, -12510, -13618, -14640, -15613, -16517, -17323, -18038, -18657, -19159, -19579, -19909, -20127, -20247, -20266, -20162, -19960, -19667, -19264, -18773, -18195, -17520, -16748, -15906, -14976, -13971, -12907, -11771, -10571, -9331, -8034, -6704, -5388, -4096, -2791, -1448, -64, 1343, 2736, 4079, 5405, 6732, 8030, 9298, 10528, 11683, 12754, 13714, 14586, 15420, 16247, 17042, 17749, 18360, 18876, 19289, 19643, 19932, 20149, 20271, 20301, 20239, 20080, 19855, 19572, 19214, 18784, 18276, 17695, 17035, 16313, 15536, 14704, 13809, 12866, 11872, 10839, 9785, 8707, 7586, 6419, 5223, 4010, 2785, 1557, 327, -906, -2146, -3383, -4593, -5791, -6974, -8131, -9266, -10363, -11415, -12420, -13378, -14291, -15150, -15953, -16701, -17385, -17997, -18535, -18957, -19364, -19832, -20162, -20286, -20369, -20414, -20307, -20147, -20007, -19750, -19332, -18887, -18400, -17777, -17098, -16401, -15585, -14649, -13725, -12752, -11666, -10580, -9481, -8281, -7027, -5810, -4559, -3237, -1951, -657, 739, 2134, 3490, 4844, 6151, 7368, 8598, 9834, 10991, 12107, 13198, 14177, 15084, 15975, 16802, 17552, 18265, 18861, 19317, 19703, 20014, 20202, 20333, 20389, 20305, 20127, 19877, 19514, 19056, 18531, 17892, 17160, 16369, 15486, 14516, 13500, 12416, 11250, 10053, 8808, 7501, 6170, 4814, 3400, 1973, 548, -884, -2307, -3691, -5088, -6457, -7784, -9088, -10344, -11529, -12669, -13753, -14745, -15668, -16525, -17293, -17987, -18610, -19116, -19529, -19859, -20082, -20213, -20260, -20191, -20027, -19772, -19420, -18981, -18460, -17862, -17164, -16397, -15557, -14634, -13646, -12602, -11499, -10335, -9140, -7921, -6704, -5480, -4220, -2898, -1549, -207, 1124, 2423, 3696, 4981, 6273, 7537, 8763, 9928, 11004, 11992, 12949, 13903, 14811, 15671, 16453, 17143, 17745, 18289, 18775, 19187, 19519, 19772, 19928, 19994, 19984, 19907, 19752, 19527, 19227, 18837, 18368, 17839, 17237, 16568, 15833, 15041, 14184, 13269, 12311, 11302, 10241, 9148, 8015, 6845, 5652, 4439, 3203, 1954, 696, -563, -1819, -3074, -4317, -5564, -6804, -8009, -9159, -10271, -11345, -12375, -13367, -14308, -15186, -16001, -16755, -17440, -18057, -18595, -19037, -19508, -19945, -20162, -20245, -20329, -20309, -20164, -20027, -19827, -19446, -18996, -18527, -17925, -17230, -16519, -15705, -14775, -13856, -12883, -11790, -10674, -9556, -8336, -7074, -5847, -4563, -3222, -1906, -546, 876, 2241, 3558, 4893, 6185, 7422, 8686, 9916, 11049, 12152, 13215, 14175, 15092, 15983, 16789, 17503, 18160, 18687, 19109, 19484, 19772, 19943, 20044, 20052, 19926, 19733, 19459, 19064, 18593, 18051, 17393, 16658, 15866, 14974, 14008, 13005, 11917, 10764, 9586, 8354, 7059, 5759, 4428, 3059, 1688, 317, -1079, -2461, -3813, -5174, -6502, -7781, -9041, -10263, -11417, -12530, -13569, -14514, -15409, -16258, -17027, -17721, -18338, -18852, -19270, -19615, -19874, -20031, -20110, -20095, -19967, -19754, -19472, -19094, -18632, -18109, -17488, -16780, -16007, -15173, -14252, -13284, -12264, -11178, -10055, -8930, -7773, -6571, -5328, -4049, -2742, -1441, -156, 1129, 2406, 3670, 4938, 6207, 7437, 8602, 9710, 10764, 11788, 12799, 13768, 14672, 15495, 16253, 16939, 17556, 18122, 18617, 19024, 19352, 19596, 19757, 19838, 19851, 19787, 19634, 19403, 19094, 18702, 18233, 17706, 17100, 16423, 15679, 14874, 14001, 13072, 12095, 11064, 9993, 8876, 7728, 6539, 5330, 4098, 2845, 1579, 312, -959, -2241, -3524, -4803, -6061, -7276, -8454, -9592, -10706, -11780, -12806, -13779, -14689, -15531, -16313, -17040, -17704, -18291, -18762, -19212, -19662, -19922, -20035, -20134, -20147, -20018, -19872, -19686, -19324, -18885, -18413, -17822, -17123, -16418, -15617, -14702, -13783, -12810, -11717, -10603, -9487, -8270, -7017, -5787, -4501, -3156, -1821, -462, 923, 2249, 3548, 4878, 6170, 7409, 8664, 9866, 10983, 12073, 13129, 14087, 15011, 15891, 16660, 17348, 17985, 18503, 18934, 19313, 19592, 19752, 19851, 19855, 19739, 19555, 19294, 18908, 18447, 17925, 17288, 16573, 15808, 14951, 14006, 13031, 11983, 10863, 9710, 8519, 7272, 6014, 4743, 3421, 2082, 745, -608, -1960, -3278, -4591, -5900, -7167, -8401, -9611, -10758, -11818, -12836, -13804, -14713, -15587, -16395, -17106, -17736, -18300, -18773, -19167, -19493, -19729, -19862, -19913, -19881, -19752, -19549, -19287, -18925, -18475, -17963, -17365, -16684, -15945, -15148, -14271, -13337, -12362, -11340, -10271, -9176, -8030, -6834, -5613, -4381, -3126, -1857, -595, 677, 1949, 3194, 4430, 5669, 6882, 8054, 9196, 10303, 11360, 12367, 13337, 14250, 15099, 15887, 16613, 17265, 17852, 18366, 18801, 19165, 19452, 19654, 19765, 19802, 19761, 19632, 19422, 19142, 18775, 18321, 17802, 17211, 16543, 15803, 14998, 14117, 13192, 12212, 11184, 10104, 8981, 7820, 6622, 5395, 4154, 2892, 1611, 319, -992, -2309, -3612, -4878, -6123, -7336, -8525, -9693, -10813, -11885, -12900, -13864, -14766, -15604, -16395, -17123, -17777, -18304, -18735, -19193, -19585, -19780, -19889, -19969, -19889, -19731, -19585, -19311, -18897, -18447, -17905, -17228, -16532, -15791, -14906, -13984, -13048, -11987, -10869, -9766, -8585, -7332, -6100, -4823, -3473, -2149, -829, 531, 1868, 3162, 4497, 5802, 7040, 8276, 9493, 10620, 11711, 12782, 13766, 14679, 15559, 16346, 17038, 17689, 18248, 18690, 19084, 19399, 19581, 19692, 19739, 19662, 19497, 19272, 18936, 18501, 18015, 17436, 16759, 16031, 15231, 14336, 13384, 12395, 11321, 10203, 9076, 7906, 6689, 5455, 4180, 2866, 1557, 257, -1062, -2371, -3655, -4945, -6217, -7441, -8628, -9766, -10837, -11867, -12887, -13849, -14743, -15581, -16343, -17016, -17629, -18182, -18653, -19032, -19347, -19566, -19686, -19737, -19720, -19609, -19418, -19161, -18807, -18366, -17862, -17288, -16635, -15911, -15137, -14278, -13365, -12418, -11413, -10346, -9249, -8118, -6935, -5729, -4512, -3265, -2003, -743, 522, 1782, 3027, 4257, 5504, 6734, 7916, 9067, 10175, 11233, 12247, 13224, 14145, 14998, 15795, 16528, 17179, 17772, 18304, 18747, 19114, 19397, 19594, 19697, 19733, 19692, 19557, 19343, 19049, 18668, 18207, 17678, 17063, 16373, 15615, 14790, 13894, 12954, 11957, 10908, 9806, 8660, 7482, 6269, 5028, 3773, 2485, 1167, -156, -1480, -2778, -4058, -5317, -6567, -7790, -8979, -10128, -11225, -12272, -13271, -14209, -15101, -15934, -16695, -17368, -17937, -18387, -18837, -19294, -19559, -19690, -19793, -19767, -19617, -19476, -19259, -18874, -18441, -17937, -17290, -16598, -15881, -15043, -14124, -13204, -12187, -11070, -9967, -8821, -7578, -6342, -5088, -3768, -2449, -1157, 186, 1536, 2828, 4141, 5455, 6693, 7912, 9136, 10280, 11362, 12427, 13412, 14316, 15195, 16013, 16723, 17376, 17965, 18439, 18833, 19180, 19414, 19544, 19624, 19598, 19454, 19262, 18992, 18604, 18154, 17640, 17018, 16322, 15578, 14751, 13843, 12904, 11902, 10837, 9755, 8645, 7467, 6245, 5018, 3753, 2466, 1193, -83, -1388, -2671, -3933, -5200, -6432, -7604, -8748, -9873, -10948, -11990])
        
# Settings: lag = 30, threshold = 5, influence = 0
lag = 128 #30 #计算平均值的间隔点数
threshold = 5
influence = 0.5 #对当前节点做平滑，平滑系数是(0,1)，值越大越受当前值的影响。

# Run algo with settings from above
result = thresholding_algo(y, lag=lag, threshold=threshold, influence=influence)

# Plot result
pylab.subplot(211)
pylab.plot(np.arange(1, len(y)+1), y)

pylab.plot(np.arange(1, len(y)+1),
           result["avgFilter"], color="cyan", lw=2)

pylab.plot(np.arange(1, len(y)+1),
           result["avgFilter"] + threshold * result["stdFilter"], color="green", lw=2)

pylab.plot(np.arange(1, len(y)+1),
           result["avgFilter"] - threshold * result["stdFilter"], color="green", lw=2)

pylab.subplot(212)
pylab.step(np.arange(1, len(y)+1), result["signals"], color="red", lw=2)
pylab.ylim(-1.5, 1.5)
