# -*- coding: utf-8 -*-
"""
Created on Mon Nov 19 15:02:11 2018

Reference : https://stackoverflow.com/questions/22583391/peak-signal-detection-in-realtime-timeseries-data/43512887#43512887
# Implementation of algorithm from https://stackoverflow.com/a/22640362/6029703

@author: tianye
###
A、名称：一阶滞后滤波法
B、方法：
    取a=0-1，本次滤波结果=(1-a)*本次采样值+a*上次滤波结果。
C、优点：
    对周期性干扰具有良好的抑制作用；
    适用于波动频率较高的场合。
D、缺点：
    相位滞后，灵敏度低；
    滞后程度取决于a值大小；
    不能消除滤波频率高于采样频率1/2的干扰信号。

###
A、名称：递推平均滤波法（又称滑动平均滤波法）
B、方法：
    把连续取得的N个采样值看成一个队列，队列的长度固定为N，
    每次采样到一个新数据放入队尾，并扔掉原来队首的一次数据（先进先出原则），
    把队列中的N个数据进行算术平均运算，获得新的滤波结果。
    N值的选取：流量，N=12；压力，N=4；液面，N=4-12；温度，N=1-4。
C、优点：
    对周期性干扰有良好的抑制作用，平滑度高；
    适用于高频振荡的系统。
D、缺点：
    灵敏度低，对偶然出现的脉冲性干扰的抑制作用较差；
    不易消除由于脉冲干扰所引起的采样值偏差；
    不适用于脉冲干扰比较严重的场合；
    比较浪费RAM。

"""
import numpy as np
import pylab

def thresholding_algo(y, lag, threshold, influence):
    nFlag = 0x00
    signals = np.zeros(len(y)) # 返回长度为 len(y) 的数组。
    filteredY = np.array(y)
    avgFilter = [0]*len(y)
    stdFilter = [0]*len(y)
    avgFilter[lag - 1] = np.mean(y[0:lag])
    stdFilter[lag - 1] = np.std(y[0:lag], ddof=1) # 计算全局标准差，默认情况下，numpy 计算的是总体标准偏差，ddof = 0
    for i in range(lag, len(y)):
        if abs(y[i] - avgFilter[i-1]) > threshold * stdFilter [i-1]:
            if y[i] > avgFilter[i-1]:                
                signals[i] = 1
                if nFlag == 0x00:
                    nFlag = i # 打印出来的 nFlag+1 索引就对应波形工具内的点号。
                              # 打印出来的 nFlag+2 索引就对应原始点数据内的点号。
                    print('nFlag = %d,  y[i] = %d' % (nFlag, y[i]))
            else:
                signals[i] = -1
                if nFlag == 0x00:
                    nFlag = i
                    print('nFlag = %d,  y[i] = %d' % (nFlag, y[i]))

            """
            @2018-11-20 对异常点的数值进行平滑，以便评估下下个点是否为异常点。
             因为不做平滑，由于当前是个异常点，对平均值、方差影响较大，若是下一个点仍是异常点，可能不会识别。
            """
            filteredY[i] = influence * y[i] + (1 - influence) * filteredY[i-1] ### 一阶滞后滤波法
            avgFilter[i] = np.mean(filteredY[(i-lag+1):i+1])
            stdFilter[i] = np.std(filteredY[(i-lag+1):i+1], ddof=1)
        else:
            signals[i] = 0
            filteredY[i] = y[i]
            avgFilter[i] = np.mean(filteredY[(i-lag+1):i+1])
            stdFilter[i] = np.std(filteredY[(i-lag+1):i+1], ddof=1)

    return dict(signals = np.asarray(signals),
                avgFilter = np.asarray(avgFilter),
                stdFilter = np.asarray(stdFilter))
    
# Data
"""
y = np.array([1,1,1.1,1,0.9,1,1,1.1,1,0.9,1,1.1,1,1,0.9,1,1,1.1,1,1,1,1,1.1,0.9,1,1.1,1,1,0.9,
       1,1.1,1,1,1.1,1,0.8,0.9,1,1.2,0.9,1,1,1.1,1.2,1,1.5,1,3,2,5,3,2,1,1,1,0.9,1,1,3,
       2.6,4,3,3.2,2,1,1,0.8,4,4,2,2.5,1,1,1])
"""
#y = np.array([2, 2, 3, 3, 3, 2, 3, 2, 3, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1, 0, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, -3, -11, -18, -27, -35, -43, -53, -62, -70, -78, -87, -97, -106, -114, -122, -130, -139, -147, -154, -161, -168, -175, -182, -189, -195, -201, -206, -210, -216, -220, -224, -227, -230, -232, -235, -236, -237, -238, -238, -239, -238, -237, -236, -233, -230, -228, -225, -221, -216, -212, -207, -202, -195, -189, -183, -176, -168, -160, -153, -145, -137, -127, -118, -109, -100, -91, -80, -70, -61, -53, -42, -30, -21, -12, -1, 8, 17, 27, 36, 45, 53, 63, 71, 79, 89, 97, 104, 111, 118, 124, 130, 136, 141, 146, 152, 156, 159, 163, 165, 168, 169, 171, 171, 172, 172, 172, 170, 169, 168, 165, 163, 160, 155, 151, 147, 143, 137, 131, 125, 119, 113, 105, 98, 91, 84, 75, 66, 58, 49, 41, 30, 21, 13, 4, -5, -15, -23, -32, -41, -52, -61, -69, -77, -86, -96, -104, -111, -118, -126, -134, -140, -146, -153, -160, -166, -170, -176, -180, -184, -187, -190, -193, -196, -198, -198, -200, -200, -200, -200, -199, -198, -195, -192, -188, -186, -181, -176, -171, -166, -160, -152, -145, -138, -130, -122, -113, -104, -95, -86, -76, -66, -56, -46, -37, -24, -14, -3, 7, 17, 28, 38, 47, 58, 68, 78, 88, 96, 106, 115, 123, 130, 138, 146, 152, 159, 164, 170, 175, 179, 183, 186, 190, 191, 193, 195, 195, 194, 194, 193, 192, 190, 187, 183, 179, 175, 171, 165, 159, 154, 146, 139, 131, 124, 116, 107, 98, 90, 81, 71, 60, 50, 41, 31, 19, 8, -1, -10, -21, -31, -42, -52, -61, -71, -81, -91, -99, -107, -116, -125, -131, -138, -145, -152, -157, -162, -167, -172, -176, -179, -182, -184, -186, -187, -188, -187, -187, -187, -184, -183, -180, -176, -173, -170, -165, -160, -154, -148, -143, -137, -129, -121, -114, -106, -98, -88, -80, -71, -62, -52, -42, -33, -24, -14, -2, 7, 15, 24, 36, 45, 55, 64, 73, 84, 93, 101, 109, 118, 126, 134, 140, 147, 154, 161, 166, 172, 176, 182, 186, 189, 192, 196, 198, 199, 201, 202, 201, 202, 201, 200, 198, 196, 193, 191, 186, 183, 178, 173, 168, 162, 155, 149, 143, 135, 126, 119, 111, 103, 94, 84, 76, 67, 58, 47, 37, 27, 18, 8, -1, -11, -20, -30, -39, -50, -59, -68, -76, -87, -95, -103, -110, -118, -126, -132, -139, -145, -152, -157, -161, -165, -169, -174, -176, -179, -181, -183, -183, -184, -185, -184, -183, -182, -180, -178, -175, -171, -168, -164, -160, -154, -149, -144, -138, -130, -123, -116, -108, -102, -92, -84, -76, -68, -58, -48, -38, -30, -21, -10, 0, 9, 17, 27, 37, 46, 55, 64, 74, 84, 92, 99, 108, 117, 125, 132, 139, 147, 154, 160, 165, 171, 176, 181, 185, 189, 191, 194, 197, 199, 202, 202, 203, 203, 203, 201, 200, 198, 197, 194, 191, 187, 183, 180, 174, 168, 162, 157, 151, 144, 136, 129, 122, 114, 105, 96, 88, 80, 70, 60, 51, 42, 32, 22, 12, 3, -6, -15, -25, -35, -44, -53, -62, -71, -80, -87, -96, -105, -113, -119, -126, -133, -139, -145, -151, -156, -161, -166, -170, -173, -176, -179, -182, -183, -184, -185, -185, -185, -184, -183, -181, -179, -176, -174, -169, -166, -161, -157, -152, -146, -140, -135, -128, -120, -113, -105, -98, -90, -81, -71, -63, -55, -46, -36, -26, -17, -8, 1, 12, 21, 29, 39, 49, 58, 67, 76, 85, 94, 102, 110, 117, 127, 134, 140, 147, 154, 160, 166, 170, 176, 180, 185, 188, 191, 194, 197, 199, 200, 201, 202, 202, 202, 201, 200, 198, 195, 193, 190, 187, 182, 178, 173, 168, 162, 157, 151, 144, 136, 129, 121, 113, 106, 96, 87, 79, 70, 61, 51, 42, 32, 24, 14, 4, -4, -14, -23, -34, -43, -52, -61, -70, -79, -87, -94, -103, -111, -119, -125, -132, -138, -145, -150, -155, -160, -165, -169, -173, -175, -179, -182, -183, -184, -185, -186, -186, -185, -184, -183, -181, -179, -176, -173, -168, -164, -160, -156, -151, -144, -138, -132, -125, -118, -110, -103, -95, -86, -78, -69, -61, -52, -42, -31, -22, -14, -4, 5, 14, 23, 32, 42, 52, 61, 70, 78, 88, 97, 105, 113, 120, 128, 135, 142, 149, 155, 161, 167, 172, 176, 181, 185, 189, 191, 195, 197, 198, 200, 201, 200, 201, 201, 200, 198, 196, 194, 191, 188, 184, 180, 175, 171, 166, 160, 152, 147, 141, 133, 125, 117, 110, 102, 93, 84, 75, 67, 58, 47, 38, 30, 19, 10, 0, -8, -17, -27, -37, -46, -55, -63, -72, -83, -90, -98, -105, -114, -121, -128, -134, -141, -147, -152, -158, -163, -168, -172, -174, -178, -181, -183, -184, -186, -187, -188, -187, -187, -186, -184, -182, -180, -177, -173, -170, -165, -160, -156, -151, -145, -138, -132, -126, -118, -110, -103, -95, -87, -78, -69, -61, -52, -42, -32, -24, -15, -4, 5, 14, 23, 32, 42, 52, 61, 69, 78, 88, 96, 104, 112, 120, 128, 135, 142, 149, 154, 161, 166, 171, 175, 181, 184, 188, 191, 194, 197, 198, 199, 200, 200, 200, 199, 198, 197, 195, 192, 190, 186, 183, 178, 174, 169, 165, 158, 151, 145, 139, 131, 124, 117, 109, 100, 91, 82, 74, 66, 56, 46, 37, 28, 19, 8, -1, -10, -18, -29, -39, -48, -56, -66, -75, -84, -91, -99, -107, -116, -123, -129, -135, -142, -148, -153, -158, -163, -169, -172, -176, -179, -182, -184, -185, -187, -188, -188, -188, -187, -187, -185, -183, -180, -177, -175, -171, -167, -161, -157, -151, -146, -140, -134, -127, -119, -111, -103, -96, -88, -79, -70, -62, -53, -43, -33, -23, -15, -6, 4, 14, 22, 31, 41, 50, 61, 68, 77, 87, 95, 103, 111, 118, 127, 135, 141, 146, 153, 160, 165, 170, 175, 179, 183, 187, 190, 193, 195, 197, 198, 199, 199, 198, 198, 198, 196, 194, 191, 189, 186, 182, 178, 173, 169, 163, 157, 151, 145, 138, 131, 123, 115, 108, 100, 90, 81, 74, 65, 56, 45, 36, 28, 18, 7, -1, -10, -19, -29, -39, -49, -56, -65, -75, -83, -91, -99, -107, -115, -123, -129, -136, -143, -148, -154, -159, -164, -168, -173, -176, -179, -182, -185, -187, -188, -189, -189, -189, -189, -188, -186, -184, -182, -179, -175, -172, -167, -163, -159, -152, -146])
#y = np.array([4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 3, 3, 4, 3, 3, 3, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 3, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 2, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 2, 2, 3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 3, 2, 2, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 3, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 3, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 0, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 2, 6, 11, 17, 24, 30, 36, 42, 47, 51, 56, 60, 63, 65, 67, 68, 68, 68, 68, 67, 67, 63, 61, 57, 53, 49, 44, 38, 32, 27, 19, 12, 3, -2, -9, -18, -27, -36, -45, -54, -63, -74, -82, -91, -100, -109, -118, -126, -135, -142, -150, -158, -165, -171, -178, -183, -188, -192, -197, -200, -203, -205, -206, -206, -206, -207, -207, -206, -205, -202, -200, -196, -191, -186, -180, -173, -166, -157, -149, -140, -129, -118, -106, -94, -83, -68, -54, -43, -34, -22, -8, 6, 21, 37, 52, 68, 85, 101, 117, 133, 151, 167, 183, 198, 214, 226, 235, 243, 254, 268, 279, 287, 294, 305, 316, 327, 336, 347, 356, 365, 373, 381, 387, 392, 396, 398, 401, 402, 403, 402, 401, 398, 395, 391, 385, 381, 375, 367, 359, 349, 336, 324, 312, 297, 283, 266, 248, 231, 214, 193, 173, 152, 130, 109, 86, 61, 38, 15, -7, -33, -57, -79, -99, -123, -148, -171, -192, -217, -242, -265, -282, -293, -307, -325, -345, -364, -384, -405, -422, -439, -455, -470, -485, -498, -510, -520, -531, -540, -547, -553, -558, -562, -564, -565, -565, -562, -559, -555, -550, -543, -534, -524, -513, -502, -489, -476, -468, -462, -453, -437, -423, -406, -388, -367, -344, -321, -298, -274, -248, -221, -197, -176, -156, -129, -99, -69, -39, -8, 22, 52, 81, 110, 141, 172, 201, 229, 258, 287, 316, 343, 368, 395, 421, 446, 469, 491, 513, 535, 555, 574, 591, 607, 623, 636, 648, 660, 670, 678, 685, 690, 693, 695, 696, 696, 695, 694, 691, 687, 682, 674, 666, 656, 645, 634, 621, 609, 598, 587, 569, 549, 528, 506, 489, 471, 452, 429, 404, 377, 358, 341, 318, 289, 259, 228, 196, 163, 128, 91, 57, 23, -12, -50, -85, -119, -154, -190, -226, -259, -290, -325, -358, -389, -420, -448, -468, -490, -514, -540, -567, -594, -618, -639, -659, -680, -699, -715, -731, -745, -756, -766, -776, -784, -789, -792, -794, -794, -793, -792, -787, -781, -775, -765, -753, -739, -723, -705, -687, -669, -648, -623, -596, -565, -535, -504, -472, -437, -400, -362, -326, -286, -244, -202, -160, -120, -80, -46, -8, 30, 72, 116, 159, 202, 243, 283, 325, 365, 403, 440, 478, 514, 549, 582, 614, 644, 674, 701, 726, 749, 772, 792, 809, 825, 839, 849, 859, 865, 870, 872, 873, 871, 867, 860, 851, 839, 826, 811, 793, 772, 751, 728, 704, 674, 642, 610, 576, 540, 502, 465, 426, 384, 340, 297, 255, 210, 162, 116, 80, 56, 36, 2, -36, -79, -124, -162, -201, -240, -281, -324, -366, -407, -449, -489, -530, -568, -603, -638, -671, -704, -734, -762, -787, -811, -834, -854, -871, -887, -901, -911, -920, -925, -930, -931, -931, -927, -921, -913, -901, -889, -876, -858, -841, -821, -798, -774, -745, -715, -685, -653, -623, -586, -549, -510, -472, -429, -383, -339, -293, -248, -198, -149, -100, -52, -4, 40, 79, 118, 161, 209, 257, 304, 348, 392, 437, 481, 522, 561, 601, 640, 675, 705, 728, 756, 782, 806, 829, 854, 878, 897, 912, 924, 936, 947, 957, 965, 971, 975, 975, 975, 972, 965, 956, 946, 933, 918, 899, 877, 854, 830, 802, 771, 740, 711, 682, 648, 608, 567, 526, 482, 435, 389, 343, 296, 244, 194, 145, 96, 43, -10, -61, -109, -156, -196, -239, -282, -322, -348, -366, -390, -420, -459, -500, -542, -580, -620, -660, -699, -736, -769, -800, -829, -856, -880, -902, -923, -943, -960, -975, -986, -997, -1004, -1009, -1011, -1012, -1008, -1003, -994, -984, -971, -954, -935, -916, -894, -867, -838, -808, -777, -742, -705, -672, -639, -600, -559, -512, -465, -418, -369, -317, -265, -215, -165, -111, -55, -1, 50, 102, 155, 206, 258, 307, 356, 405, 454, 497, 539, 580, 625, 666, 706, 745, 781, 816, 847, 875, 903, 929, 950, 971, 989, 1005, 1018, 1028, 1035, 1040, 1043, 1043, 1040, 1034, 1026, 1013, 1000, 985, 966, 945, 920, 893, 865, 834, 800, 765, 729, 689, 648, 604, 561, 516, 467, 416, 366, 317, 266, 210, 158, 106, 53, -1, -59, -113, -165, -218, -271, -323, -372, -420, -469, -518, -564, -606, -649, -691, -731, -768, -802, -836, -869, -899, -925, -949, -972, -993, -1010, -1025, -1036, -1043, -1048, -1053, -1057, -1059, -1057, -1054, -1048, -1039, -1028, -1016, -1003, -986, -964, -940, -915, -888, -859, -826, -800, -775, -746, -709, -669, -628, -586, -542, -495, -445, -399, -356, -313, -260, -207, -157, -109, -57, -2, 50, 102, 153, 206, 259, 310, 359, 408, 458, 505, 550, 594, 638, 680, 721, 759, 795, 831, 865, 894, 923, 950, 975, 997, 1015, 1031, 1046, 1058, 1068, 1076, 1079, 1081, 1081, 1079, 1075, 1067, 1056, 1044, 1031, 1019, 1006, 988, 965, 941, 913, 883, 850, 817, 781, 741, 701, 659, 617, 570, 522, 477, 432, 379, 324, 269, 217, 165, 107, 50, -2, -55, -109, -165, -220, -270, -320, -373, -423, -472, -518, -563, -610, -654, -695, -732, -764, -800, -834, -867, -898, -927, -955, -979, -1001, -1021, -1039, -1054, -1066, -1075, -1082, -1086, -1087, -1086, -1082, -1075, -1065, -1054, -1042, -1024, -1004, -981, -957, -931, -900, -866, -833, -796, -758, -715, -671, -628, -583, -534, -483, -432, -381, -328, -273, -216, -161, -107, -49, 8, 66, 120, 174, 230, 285, 337, 388, 438, 489, 538, 584, 621, 650, 682, 719, 758, 797, 834, 870, 903, 932, 959, 986, 1009, 1031, 1049, 1064, 1077, 1087, 1095, 1099, 1101, 1100, 1097, 1090, 1080, 1067, 1052, 1038, 1023, 1002, 979, 953, 925, 893, 858, 822, 786, 745, 701, 656, 611, 565, 514, 461, 410, 359, 305, 247, 191, 136, 80, 22, -36, -91, -145, -201, -257, -312, -363, -413, -466, -516, -563, -610, -654, -699, -742, -773, -794, -816, -845, -874, -903, -931, -959, -983, -1004, -1024, -1043, -1059, -1072, -1084, -1092, -1099, -1102, -1103, -1101, -1099, -1094, -1086, -1077, -1070, -1060, -1045, -1030, -1011, -988, -960, -931, -900, -868, -832, -794, -755, -716, -672, -626, -578, -530, -482, -432, -378, -325, -272, -222, -181, -147, -110, -62, -8, 49, 107, 161, 213, 258, 289, 319, 354, 397, 446, 494, 541, 580, 609, 641, 671, 701, 735, 774, 813, 850, 885, 917, 946, 975, 1001, 1023, 1044, 1062, 1077, 1090, 1100, 1108, 1112, 1114, 1114, 1110, 1105, 1095, 1083, 1070, 1055, 1039, 1020, 999, 974, 947, 925, 909, 891, 865, 829, 791, 752, 710, 664, 618, 572, 524, 473, 420, 367, 316, 264, 221, 172, 122, 69, 13, -44, -99, -152, -161, -80, -47, -34, -28, -25, -25, -24, -23, -23, -24, -23, -23, -23, -23, -24, -23, -23, -23, -22, -23, -23, -23, -23, -22, -23, -23, -22, -22, -23, -22, -22, -22, -22, -22, -22, -21, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -21, -21, -22, -22, -21, -21, -21, -21, -21])
#---New__Index580__L3 区外 L5 1000欧 B相__BAY01_0046_20181001_044812_313 + I0
y = np.array([-4, -2, 5, -8, 4, 6, 6, -8, 5, -2, 0, 6, 7, -4, 2, 6, 8, -6, 4, 1, -10, -17, -18, -19, -8, 4, 7, -3, -13, -17, -17, 1, 5, 8, 8, -7, 4, -1, -4, 5, 7, 8, 8, 8, -7, 4, 0, -12, -15, 2, -4, 0, 6, 7, -4, 2, 3, -8, 4, 7, 14, 26, 0, 8, 8, 4, -10, -15, 1, 6, 8, 8, 8, 8, 8, 8, -6, -14, -2, 4, 7, 8, 8, 8, 8, 8, -4, -13, -6, 4, 8, 8, 8, 8, 9, 8, 8, 8, 9, 24, 9, 7, 7, 8, 8, 8, 4, -6, 5, 19, 17, 3, 8, -6, 4, 7, 6, -8, 4, -1, 0, 23, 17, 23, 27, 14, -4, 6, 8, 9, 8, 9, -3, -13, -8, 22, 19, 12, 10, 9, 9, 8, 0, 0, 23, 17, 13, 4, -5, 6, 8, -1, -2, 6, 8, 8, 8, 8, 8, 8, 0, 0, 5, -8, -15, -3, 2, -10, 4, 8, 2, -11, -15, 0, -2, -13, -17, -19, -2, 4, 6, 8, -4, 2, 2, -8, 4, -4, 0, 6, 8, 8, 0, 0, 6, -7, -16, -17, -11, 2, 6, -2, 3, 26, 16, 0, -12, -17, -18, 2, 6, 2, -6, 6, -6, 2, 6, 7, 8, 8, 8, 8, 8, 8, -1, -1, 6, 7, 19, 25, 13, -5, 6, 8, 7, 7, -7, 3, 7, 8, 8, 23, 22, 8, -4, 6, 7, 0, -2, 6, -7, 3, 1, -6, 4, -6, 2, 6, 6, -7, -15, -17, -17, -19, -19, -19, -8, 3, 6, 8, 0, -11, -16, -18, -1, 4, 6, -8, 4, -1, -3, 4, -7, -15, -18, -13, 2, -7, -15, -6, 2, -8, -16, -18, -19, -19, 0, 4, 2, -6, 5, -4, 1, 6, 7, -5, -15, -4, 2, -10, -15, -1, 4, 6, -6, 3, 0, -5, 6, 7, 8, 4, -8, 5, 7, 8, 8, 9, 8, 0, -13, -13, 3, -6, 2, 3, -10, -15, 0, 0, -12, -16, 1, 6, 4, -8, 20, 10, 6, 8, 8, 8, 9, 8, 9, 8, 9, 8, 9, 10, 9, 8, 13, 26, 2, -10, -16, -10, 3, -8, -16, -5, 4, 7, 8, 0, -13, -17, -19, -1, 0, -12, -16, -19, -2, 4, 6, -8, 4, 7, 8, 8, 8, -1, 0, 6, -8, -15, -17, -19, -18, 1, 5, 2, -6, 5, 6, 8, 5, -9, 20, 10, 6, 6, -8, -14, 0, 1, -8, 4, 7, 8, 6, -8, 4, 6, 4, -6, 6, 7, 8, 8, 8, -6, 4, 1, -6, 5, 8, 8, 8, 8, 9, -2, -12, -12, 2, 6, 8, 4, -10, -16, 0, -1, -6, 5, 6, 8, 4, -6, 5, -4, -14, -8, 3, -8, 2, 7, 8, 8, 8, 0, -2, 6, 7, -2, 0, 6, 6, -5, 2, 7, 8, 8, 8, 2, -10, -16, -18, -18, -7, 3, -9, -15, -18, -18, -19, 0, 6, 7, 8, 8, -4, 2, 6, 8, 8, -2, 0, 6, 7, -5, 10, 24, 15, -3, 5, 7, 6, -8, 4, 7, 4, -7, 5, 6, 15, 27, 17, 26, 23, 14, 10, -7, -15, -18, -9, 3, 6, -2, -13, -11, 3, 6, 16, 23, 0, 8, 8, 8, 8, 8, 8, 8, 8, 9, 8, -4, 1, 4, -9, -15, 0, 5, 7, 8, 8, 9, 5, -8, 4, 6, 13, 27, 17, 12, 10, 5, -7, 20, 31, 30, 17, 12, 9, 9, 12, 28, 19, 13, 10, 6, -8, 5, 6, 8, 8, 8, 9, 8, 8, 8, -6, -15, -4, 3, -9, -15, -19, -19, -17, 2, -5, -14, -17, -19, -19, -19, -20, -20, -19, -19, -20, -20, -20, -34, -17, -6, -15, -17, 0, -2, -13, -16, -19, -19, -7, 3, 7, 8, 8, 8, 8, 8, 9, 8, 10, 26, 20, 22, 28, 17, 28, 22, 21, 29, 18, 26, 24, 15, 11, 26, 34, 36, 38, 37, 23, 34, 51, 45, 59, 52, 43, 41, 39, 39, 49, 62, 66, 49, 43, 39, 43, 58, 49, 42, 33, 17, 13, 39, 48, 43, 39, 23, 26, 27, 15, 10, 9, 19, 26, 15, 10, 8, 0, -2, 5, -8, 3, 6, 6, 8, 8, -1, -11, -17, -35, -34, -25, -23, -21, -35, -55, -67, -58, -54, -53, -53, -52, -53, -67, -87, -99, -89, -68, -58, -54, -54, -52, -68, -66, -62, -75, -80, -67, -67, -76, -80, -81, -71, -59, -58, -71, -65, -46, -34, -45, -32, -37, -39, -29, -42, -47, -40, -27, -23, -20, -21, -20, -10, 2, 6, 7, 8, 8, 8, 23, 32, 36, 37, 39, 39, 45, 60, 67, 54, 45, 46, 60, 67, 69, 70, 68, 51, 74, 80, 78, 91, 80, 75, 72, 71, 71, 70, 60, 58, 82, 77, 86, 86, 80, 91, 96, 88, 77, 73, 71, 70, 80, 88, 78, 73, 71, 63, 48, 42, 40, 49, 56, 45, 41, 26, 15, 13, 28, 34, 15, 7, 6, -8, -15, -18, -8, 2, -9, -17, -19, -19, -19, -34, -45, -49, -51, -52, -52, -52, -52, -52, -53, -62, -75, -79, -82, -95, -99, -89, -85, -84, -83, -82, -83, -101, -109, -112, -110, -94, -86, -97, -108, -111, -112, -113, -105, -95, -106, -77, -87, -96, -91, -104, -95, -78, -67, -75, -62, -56, -53, -52, -52, -51, -51, -52, -51, -52, -52, -43, -32, -43, -31, -5, 4, 6, 8, 8, 17, 27, 17, 11, 35, 49, 45, 60, 67, 69, 65, 50, 60, 79, 85, 78, 91, 97, 110, 119, 107, 103, 101, 110, 121, 108, 104, 101, 101, 101, 99, 114, 115, 106, 103, 101, 100, 93, 82, 92, 97, 99, 100, 99, 84, 75, 72, 70, 71, 69, 58, 46, 41, 39, 52, 45, 26, 32, 4, -10, -16, -21, -39, -32, -34, -41, -30, -41, -48, -56, -73, -80, -67, -58, -54, -54, -70, -79, -88, -104, -111, -128, -128, -119, -118, -132, -140, -143, -141, -126, -136, -141, -137, -123, -119, -117, -115, -114, -114, -114, -126, -132, -121, -117, -100, -99, -113, -130, -106, -104, -102, -91, -86, -68, -58, -48, -32, -43, -48, -41, -17, 0, 5, 7, 9, 9, 26, 34, 28, 21, 31, 36, 49, 56, 48, 60, 67, 69, 71, 71, 86, 95, 99, 103, 119, 112, 116, 125, 128, 113, 119, 118, 112, 123, 128, 142, 154, 158, 144, 137, 134, 133, 132, 132, 133, 125, 110, 104, 101, 100, 100, 99, 100, 88, 77, 70, 52, 43, 50, 62, 66, 50, 43, 40, 36, 19, 13, 9, 2, -11, -17, -19, -20, -25, -41, -49, -50, -52, -52, -53, -67, -76, -80, -82, -82, -97, -108, -112, -114, -114, -114, -119, -135, -141, -144, -145, -145, -145, -145, -145, -145, -145, -145, -145, -145, -145, -145, -145, -145, -145, -143, -126, -133, -141, -138, -124, -118, -116, -114, -112, -94, -103, -99, -83, -65, -74, -65, -58, -53, -53, -52, -39, -13, 0, 6, 7, 18, 31, 36, 54, 53, 44, 43, 59, 66, 69, 75, 90, 97, 99, 99, 102, 119, 111, 105, 108, 123, 128, 130, 132, 132, 132, 132, 133, 132, 132, 132, 147, 147, 141, 152, 143, 136, 141, 151, 141, 136, 123, 110, 104, 86, 88, 88, 74, 52, 59, 75, 80, 56, 44, 40, 30, 17, 12, 8, 8, 8, 6, -8, -16, -28, -39, -28, -41, -35, -34, -47, -68, -77, -81, -86, -103, -93, -101, -116, -133, -141, -143, -144, -145, -145, -145, -144, -145, -145, -145, -145, -145, -145, -144, -145, -145, -145, -145, -144, -129, -132, -133, -123, -118, -115, -114, -110, -94, -104, -97, -88, -84, -83, -68, -58, -54, -51, -34, -23, -22, -10, 3, 7, 19, 32, 36, 37, 39, 39, 39, 39, 39, 51, 70, 87, 78, 88, 86, 86, 112, 108, 104, 101, 101, 100, 101, 112, 123, 128, 113, 132, 143, 139, 153, 143, 147, 150, 141, 135, 134, 133, 132, 132, 132, 132, 132, 130, 114, 121, 128, 125, 110, 104, 101, 101, 95, 62, 62, 67, 69, 69, 52, 43, 39, 37, 19, 13, 9, 9, 8, 7, -19, -31, -23, -22, -38, -58, -73, -80, -82, -82, -93, -102, -91, -104, -97, -96, -108, -112, -113, -123, -133, -123, -134, -141, -151, -167, -172, -159, -149, -153, -166, -154, -149, -146, -145, -145, -145, -133, -128, -138, -141, -144, -135, -122, -117, -116, -115, -108, -93, -86, -69, -67, -72, -59, -54, -52, -43, -28, -23, -21, -2, 0, -6, 5, 21, 22, 21, 50, 46, 55, 70, 87, 78, 74, 81, 93, 98, 116, 126, 130, 131, 132, 132, 132, 132, 133, 149, 144, 145, 155, 160, 146, 148, 151, 141, 152, 158, 152, 141, 136, 149, 158, 154, 140, 117, 106, 103, 101, 101, 100, 99, 93, 79, 74, 71, 60, 51, 60, 32, 30, 34, 36, 38, 23, 14, 4, -10, -16, -19, -28, -43, -49, -67, -67, -57, -56, -72, -93, -96, -93, -106, -111, -126, -137, -142, -144, -144, -145, -145, -145, -145, -145, -145, -145, -145, -145, -145, -151, -167, -173, -162, -151, -147, -145, -145, -145, -145, -145, -145, -115, -105, -111, -113, -114, -101, -96, -105, -92, -86, -94, -96, -69, -59, -54, -53, -49, -32, -24, -21, -6, 5, 23, 33, 28, 19, 32, 36, 38, 39, 41, 58, 65, 78, 91, 97, 84, 101, 113, 108, 123, 128, 131, 137, 151, 158, 161, 154, 141, 136, 148, 147, 143, 153, 144, 149, 149, 139, 136, 149, 146, 138, 135, 134, 145, 147, 138, 134, 132, 121, 108, 103, 101, 100, 100, 99, 99, 83, 87, 88, 77, 73, 71, 59, 45, 40, 21, 26, 25, 10, -8, -15, -19, -20, -21, -39, -62, -75, -77, -63, -73, -91, -106, -112, -113, -99, -88, -90, -105, -110, -113, -121, -136, -142, -144, -145, -145, -145, -145, -160, -161, -151, -148, -147, -158, -169, -173, -157, -164, -171, -170, -156, -149, -147])

# Settings: lag = 30, threshold = 5, influence = 0
# lag for the smoothing, 计算平均值的间隔点数.
lag = 128
threshold = 5
# when signal: how much influence for new data? (between 0 and 1)
# 对当前节点做平滑，平滑系数是(0,1)，值越大越受当前值的影响。when 1 is normal influence, 0.5 is half。
influence = 0

# Run algo with settings from above
result = thresholding_algo(y, lag=lag, threshold=threshold, influence=influence)

# Plot result
pylab.figure(figsize=(16, 8))
#
pylab.subplot(211)
pylab.plot(np.arange(1, len(y)+1), y)

pylab.plot(np.arange(1, len(y)+1),
           result["avgFilter"], color="cyan", lw=2)

pylab.plot(np.arange(1, len(y)+1),
           result["avgFilter"] + threshold * result["stdFilter"], color="green", lw=2)

pylab.plot(np.arange(1, len(y)+1),
           result["avgFilter"] - threshold * result["stdFilter"], color="green", lw=2)

pylab.subplot(212)
pylab.step(np.arange(1, len(y)+1), result["signals"], color="red", lw=2)
pylab.ylim(-1.5, 1.5)
