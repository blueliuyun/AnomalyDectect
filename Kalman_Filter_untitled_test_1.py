# -*- coding: utf-8 -*-
"""
Created on Thu Nov 29 21:48:11 2018

@author: tianye
"""

# A Python implementation of the example given in pages 11-15 of "An  
# Introduction to the Kalman Filter" by Greg Welch and Gary Bishop,  
# University of North Carolina at Chapel Hill, Department of Computer  
# Science, TR 95-041,  
# http://www.cs.unc.edu/~welch/kalman/kalmanIntro.html  
  
# by Andrew D. Straw  
#coding:utf-8  
import numpy as np
import pylab  
  
#这里是假设A=1，H=1的情况  
  
# 参数初始化
#z = numpy.random.normal(x,0.1,size=sz) # observations (normal about x, sigma=0.1)观测值  
z = np.array([-13, -19, -21, -12, 0, 3, 4, 6, 6, 6, -7, 0, 0, -11, 2, -6, -16, -13, 0, 4, -4, -2, 2, -10, 1, -3, -15, -19, -21, -4, -3, -10, 2, 4, -2, -6, 2, 4, -5, -2, 3, 5, -7, 0, 0, -13, -18, -21, -8, 2, 21, 17, 0, -13, -15, 0, 3, -2, -6, 2, -10, -17, -8, 1, 4, -6, 0, 0, -13, -17, 7, 20, 11, 7, -6, 0, 3, 4, -9, 2, 10, 22, -2, 5, 4, 6, 5, -9, 1, 4, 4, 6, 6, 6, 0, -8, 3, 4, 6, 6, 6, -8, 1, -1, -13, -19, -21, -22, -22, -22, -23, -4, -4, -15, -20, -21, -4, 2, 4, -10, 1, 4, 6, 4, 6, 5, 6, 5, -10, 2, 4, 5, 6, -9, 1, 4, 4, -11, 1, 4, 2, -10, 2, 4, 6, 2, -10, 2, 4, 5, 5, -9, -18, -5, 2, 4, 5, 4, 5, 5, 5, 6, -2, -4, 3, 4, -5, -2, 1, -11, 2, 3, 2, -10, 2, -7, -2, 1, -13, 1, 4, 0, -10, 2, 4, 4, 3, -10, 1, -4, -4, 2, 4, 5, 6, 2, -12, -19, -3, 2, 3, -11, 0, 4, 2, -11, 2, -6, -2, 3, 5, 5, -4, -15, -16, 1, 15, 21, 12, 8, 6, 6, 5, 6, 6, -6, -16, -10, 0, 4, 4, 6, 4, -10, -17, -21, -22, -22, -23, -22, -8, 0, -13, -19, -21, -10, 0, 3, 6, -2, -14, -19, -21, -3, 2, 3, -11, -18, -4, 2, 4, -10, 0, -1, -9, 2, 5, -3, -5, 2, -10, 1, -2, -7, 2, 4, -13, -22, -4, 2, 4, 4, 5, 5, 5, 6, 5, 5, 5, 6, 6, 5, 6, -8, -17, -6, 0, -12, 1, 4, 6, 5, 6, 6, 6, 5, 6, 6, -3, -15, -18, 0, 3, -2, -14, -19, -2, 3, 0, -13, -19, -1, -5, -6, 2, -10, 0, 3, 5, 5, 6, -3, -14, -17, 0, 3, 4, 4, -10, 2, 4, 8, 24, 16, 10, 8, 4, -10, -17, -21, -21, -17, 15, 2, -12, -18, -21, -21, -4, 2, 4, 6, -7, 0, 4, 4, 5, -5, -1, 4, 4, 5, 5, 2, -10, 3, -7, -1, 3, 4, 6, 5, 5, 4, -10, 1, -3, -15, -19, -1, 3, -1, -14, -20, 0, 2, 5, 5, -9, -17, -6, 2, 4, -8, 0, 4, 4, -10, -17, -6, 0, -13, 2, -6, -4, 2, -12, 1, 4, 8, 23, 16, 10, 2, -8, 2, -8, -17, -10, 2, 4, 5, 5, 6, 23, 17, 1, -13, -16, 0, 3, -2, -6, 2, 4, -4, -4, 4, 4, 5, 6, 2, -10, 2, -6, -16, -20, -21, -23, -6, 2, 4, 5, 5, 6, 5, 5, 6, 6, 6, 6, 6, 18, 15, 0, 6, 6, -3, -2, 3, -10, -19, -4, 0, -14, -19, -2, 2, 2, -11, 1, 4, 1, -11, 2, 4, 0, -8, 2, 4, -4, -4, 2, -10, -18, -6, 0, -12, 1, 4, 5, 4, -10, 1, -3, -15, -18, 0, 3, 0, -14, -19, -2, 3, 5, 4, -9, 0, 4, 4, -10, 2, 4, 5, 6, -10, 0, 3, 4, 6, 6, -4, -15, -17, 0, 2, 5, 6, 6, 6, -5, -16, -15, 0, 3, 5, 2, -10, 2, -6, -1, 2, -11, 2, 4, 1, -13, -19, -20, -22, -15, 0, 3, 14, 14, -23, -4, -10, -18, -20, -21, -22, -22, -22, -23, -40, -15, 4, 20, 12, -6, -16, -20, -21, -22, -22, -23, -11, 0, -12, -18, -6, 0, -13, -19, -3, 2, 4, -10, 1, -3, -4, 20, 15, 9, 11, 27, 32, 34, 35, 34, 35, 36, 35, 35, 36, 35, 36, 35, 36, 36, 36, 35, 36, 37, 54, 47, 41, 37, 36, 36, 36, 36, 34, 36, 35, 26, 23, 49, 42, 25, 22, 29, 33, 19, 11, 8, 6, 6, -7, 0, 0, -13, -19, -21, -22, -16, -1, -10, -27, -40, -30, -25, -36, -48, -52, -54, -55, -54, -55, -55, -54, -55, -54, -58, -73, -65, -59, -56, -55, -54, -69, -79, -80, -66, -58, -67, -65, -42, -48, -53, -54, -51, -34, -44, -51, -45, -34, -45, -35, -28, -25, -22, -22, -23, -6, -2, -14, -19, -2, -3, -9, 2, -8, 0, 4, 5, 6, 17, 28, 33, 34, 35, 36, 35, 36, 35, 36, 36, 39, 56, 62, 56, 47, 59, 65, 79, 83, 74, 69, 69, 67, 67, 68, 84, 79, 80, 91, 95, 96, 86, 75, 70, 68, 68, 76, 85, 74, 70, 68, 74, 87, 75, 71, 69, 62, 47, 39, 49, 60, 62, 47, 39, 36, 35, 35, 35, 22, 19, 29, 32, 33, 34, 29, 15, 8, -6, -17, -21, -22, -23, -23, -30, -45, -52, -54, -55, -56, -56, -56, -56, -62, -76, -82, -70, -71, -81, -84, -84, -86, -86, -86, -84, -86, -85, -92, -106, -96, -104, -103, -93, -88, -86, -98, -103, -95, -108, -97, -90, -87, -86, -86, -84, -86, -84, -85, -101, -99, -97, -107, -79, -78, -82, -81, -66, -59, -56, -49, -33, -26, -38, -39, -28, -24, -23, -22, -7, 0, 4, 19, 20, 10, 7, 6, 6, 13, 30, 51, 45, 40, 38, 36, 36, 50, 60, 65, 67, 82, 91, 95, 97, 97, 84, 82, 91, 95, 81, 84, 93, 94, 97, 97, 97, 101, 117, 107, 89, 83, 93, 114, 108, 91, 82, 89, 78, 72, 77, 86, 75, 70, 79, 79, 53, 42, 39, 36, 34, 35, 35, 24, 12, 8, 6, -8, 0, -2, -14, -19, -21, -23, -22, -23, -39, -49, -56, -73, -65, -72, -73, -65, -78, -82, -97, -104, -92, -88, -101, -110, -115, -117, -118, -118, -123, -137, -126, -121, -119, -119, -119, -118, -118, -118, -118, -118, -132, -131, -123, -119, -118, -118, -117, -117, -117, -101, -91, -82, -65, -58, -69, -70, -60, -56, -39, -28, -24, -23, -21, -2, -6, -4, 3, 4, 5, 13, 26, 33, 49, 51, 42, 39, 54, 49, 41, 41, 57, 78, 80, 78, 90, 95, 95, 107, 119, 126, 128, 128, 130, 130, 130, 130, 130, 130, 128, 130, 130, 129, 129, 130, 128, 130, 129, 130, 129, 115, 96, 81, 90, 94, 85, 74, 70, 68, 39, 36, 55, 62, 49, 29, 20, 28, 15, 23, 20, 6, -11, -19, -21, -22, -23, -23, -39, -49, -58, -74, -65, -72, -73, -65, -78, -83, -95, -109, -114, -117, -117, -118, -117, -119, -134, -130, -123, -121, -136, -143, -145, -147, -147, -132, -123, -121, -118, -118, -118, -127, -134, -125, -120, -132, -133, -124, -120, -102, -92, -88, -87, -104, -98, -90, -83, -66, -59, -56, -49, -33, -26, -24, -23, -22, -19, 14, 15, 17, 28, 33, 34, 35, 41, 56, 63, 66, 67, 67, 68, 68, 78, 91, 94, 95, 112, 123, 130, 147, 139, 121, 114, 123, 127, 142, 153, 157, 158, 143, 134, 138, 151, 156, 144, 144, 149, 136, 132, 131, 121, 107, 99, 98, 97, 97, 97, 97, 83, 73, 70, 67, 67, 55, 43, 36, 19, 10, 6, 1, -13, -19, -21, -22, -23, -23, -39, -38, -34, -47, -52, -67, -78, -83, -84, -85, -86, -92, -108, -114, -130, -132, -128, -138, -128, -133, -142, -147, -147, -147, -148, -149, -148, -147, -148, -148, -147, -147, -134, -134, -137, -126, -121, -131, -134, -124, -120, -119, -118, -111, -95, -72, -61, -66, -78, -81, -67, -60, -57, -54, -35, -28, -25, -11, 0, 3, 5, 6, 6, 6, 21, 39, 56, 62, 67, 67, 67, 68, 68, 68, 78, 90, 95, 97, 97, 106, 121, 126, 128, 128, 128, 128, 110, 131, 149, 154, 157, 159, 148, 136, 132, 131, 144, 133, 117, 123, 128, 128, 121, 109, 121, 125, 117, 104, 100, 98, 97, 88, 73, 52, 57, 62, 60, 44, 39, 23, 11, 3, -13, -19, -21, -8, -2, -14, -19, -23, -27, -45, -52, -54, -63, -77, -83, -100, -100, -97, -108, -96, -104, -113, -119, -135, -143, -147, -147, -147, -148, -148, -148, -148, -147, -148, -160, -166, -155, -150, -148, -148, -147, -147, -131, -135, -143, -143, -128, -121, -119, -113, -97, -108, -100, -90, -87, -86, -69, -71, -73, -60, -39, -29, -25, -12, 0, 4, 5, 5, 6, 6, 6, 15, 29, 33, 34, 48, 60, 67, 84, 92, 96, 103, 117, 125, 114, 112, 123, 127, 128, 117, 117, 143, 153, 143, 144, 150, 138, 149, 155, 158, 156, 141, 134, 121, 115, 141, 136, 131, 130, 127, 109, 117, 113, 102, 98, 98, 97, 97, 97, 97, 65, 47, 39, 36, 35, 21, 20, 25, 15, 8, -5, -17, -21, -23, -23, -23, -23, -25, -58, -62, -66, -78, -83, -84, -85, -91, -108, -114, -117, -125, -140, -144, -147, -147, -149, -147, -147, -147, -148, -148, -148, -148, -148, -148, -147, -148, -148, -147, -148, -149, -165, -149, -130, -125, -137, -143, -145, -142, -126, -103, -93, -87, -85, -85, -69, -60, -56, -54, -36, -43, -41, -29, -22, -2, 3, 10, 24, 13, 9, 17, 32, 54, 62, 77, 82, 76, 87, 93, 96, 102, 118, 107, 101, 114, 140, 134, 131, 131, 130, 130, 130, 143, 152, 154, 140, 133, 143, 153, 154, 140, 132, 141, 147, 138, 149, 130, 124, 144, 135, 116, 105, 99, 98, 97, 97, 89, 75, 70, 68, 68, 61, 46, 39, 36, 28, 9, -10, -18, -21, -22, -23, -23, -38, -58, -65, -41, -47, -53, -62, -79, -101, -112, -105, -104, -128, -123, -121, -119, -121, -137, -144, -146, -147, -147, -131, -151, -159, -153, -149, -149, -148, -147, -149, -166, -145, -138, -143, -146, -147, -147, -141, -127, -121, -119, -117, -117, -117, -117, -104, -100, -108, -94, -73, -62, -51, -33, -26, -24, -23, -22, -20, 0, -8, -2, 3, 5, 19, 30, 38, 56, 62, 66, 67, 67, 68, 82, 92, 100, 117, 106, 115, 125, 131, 147])
n_iter = len(z) #50  
sz = (n_iter,) # size of array  
x = -0.37727 # truth value (typo in example at top of p. 13 calls this z)真实值  
# -- New__Index582__L3 区外 L5 1000欧 A相__BAY01_0043_20181001_041918_151
data = np.array([2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 1, 2, 2, 2, 2, 3, 2, 3, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, -8, -16, -23, -32, -45, -55, -64, -74, -84, -92, -100, -108, -117, -125, -131, -137, -143, -150, -155, -159, -161, -164, -167, -168, -169, -168, -168, -166, -163, -161, -158, -152, -146, -140, -133, -125, -115, -106, -98, -87, -74, -62, -50, -37, -22, -7, 6, 19, 34, 51, 68, 83, 99, 115, 133, 149, 163, 178, 196, 212, 227, 242, 256, 271, 285, 298, 311, 322, 335, 344, 354, 363, 372, 379, 385, 391, 395, 399, 402, 403, 404, 404, 402, 398, 395, 390, 383, 376, 368, 359, 348, 336, 323, 310, 296, 278, 260, 244, 225, 204, 183, 161, 141, 119, 93, 68, 45, 21, -5, -32, -57, -81, -104, -134, -161, -185, -210, -237, -263, -287, -309, -333, -358, -381, -401, -421, -442, -462, -479, -494, -508, -527, -542, -555, -565, -576, -585, -592, -598, -602, -605, -606, -606, -606, -603, -600, -596, -590, -584, -576, -566, -556, -546, -534, -519, -504, -489, -474, -457, -436, -417, -398, -377, -353, -329, -306, -284, -258, -230, -203, -177, -152, -122, -91, -62, -34, -6, 26, 56, 85, 112, 142, 174, 204, 231, 259, 289, 319, 346, 372, 398, 426, 453, 477, 501, 525, 549, 571, 591, 607, 630, 650, 666, 680, 698, 713, 727, 738, 749, 758, 766, 773, 778, 782, 785, 786, 786, 784, 781, 777, 771, 764, 756, 746, 733, 722, 708, 694, 676, 658, 640, 620, 598, 574, 551, 527, 501, 472, 444, 418, 389, 355, 323, 292, 262, 227, 191, 156, 124, 89, 51, 14, -21, -54, -91, -129, -165, -197, -232, -268, -305, -337, -368, -398, -436, -468, -498, -528, -558, -588, -615, -640, -666, -692, -717, -737, -757, -778, -794, -810, -825, -843, -858, -872, -882, -891, -898, -903, -905, -906, -906, -901, -896, -889, -879, -867, -853, -836, -820, -801, -778, -753, -727, -703, -674, -640, -607, -575, -542, -504, -463, -424, -386, -346, -300, -261, -217, -171, -124, -75, -27, 18, 61, 109, 158, 202, 245, 289, 336, 381, 422, 462, 503, 545, 585, 622, 657, 694, 729, 760, 790, 819, 848, 874, 895, 916, 938, 957, 972, 985, 996, 1007, 1014, 1018, 1021, 1021, 1018, 1014, 1008, 1000, 988, 973, 958, 942, 923, 899, 872, 848, 820, 788, 755, 722, 688, 650, 608, 567, 529, 487, 439, 391, 346, 303, 252, 199, 149, 102, 53, 0, -53, -102, -149, -200, -253, -301, -346, -392, -442, -490, -533, -574, -617, -662, -702, -737, -772, -810, -844, -875, -903, -930, -957, -979, -997, -1016, -1035, -1052, -1064, -1073, -1082, -1087, -1089, -1089, -1086, -1081, -1072, -1061, -1049, -1034, -1015, -993, -970, -948, -926, -894, -860, -825, -789, -748, -704, -662, -621, -576, -527, -477, -429, -381, -328, -272, -218, -166, -114, -55, 2, 57, 109, 162, 219, 274, 326, 374, 426, 479, 529, 575, 621, 668, 714, 756, 795, 834, 874, 910, 942, 972, 1001, 1031, 1053, 1070, 1090, 1111, 1128, 1139, 1149, 1157, 1161, 1162, 1161, 1157, 1151, 1140, 1129, 1115, 1098, 1076, 1053, 1029, 1003, 971, 938, 903, 870, 831, 787, 743, 702, 657, 606, 554, 505, 456, 401, 343, 288, 236, 181, 118, 58, 3, -51, -110, -171, -227, -280, -334, -391, -441, -492, -544, -596, -649, -698, -741, -783, -828, -871, -908, -940, -970, -1008, -1040, -1067, -1091, -1114, -1135, -1152, -1166, -1178, -1188, -1194, -1198, -1198, -1196, -1191, -1182, -1171, -1159, -1141, -1121, -1099, -1076, -1049, -1017, -984, -950, -916, -875, -830, -787, -745, -698, -644, -591, -541, -490, -434, -374, -315, -260, -203, -140, -77, -16, 40, 98, 161, 222, 279, 333, 390, 450, 505, 555, 606, 660, 711, 759, 803, 847, 892, 933, 970, 1006, 1040, 1071, 1100, 1127, 1152, 1175, 1193, 1209, 1222, 1232, 1239, 1244, 1245, 1245, 1240, 1232, 1222, 1210, 1193, 1174, 1152, 1128, 1102, 1071, 1037, 1003, 968, 928, 884, 839, 796, 749, 697, 642, 591, 540, 483, 420, 362, 307, 249, 183, 118, 60, 1, -61, -127, -188, -244, -302, -365, -424, -479, -531, -587, -643, -696, -743, -789, -839, -886, -927, -964, -1003, -1041, -1075, -1105, -1131, -1159, -1183, -1203, -1218, -1233, -1245, -1254, -1259, -1261, -1261, -1257, -1251, -1242, -1231, -1216, -1196, -1174, -1151, -1127, -1092, -1059, -1025, -989, -948, -902, -859, -816, -766, -712, -657, -605, -552, -494, -431, -372, -313, -254, -188, -122, -60, 0, 62, 129, 193, 252, 309, 370, 433, 491, 545, 599, 656, 710, 761, 807, 856, 904, 948, 987, 1025, 1063, 1099, 1131, 1158, 1184, 1209, 1231, 1249, 1264, 1276, 1285, 1289, 1294, 1294, 1291, 1283, 1276, 1264, 1249, 1228, 1208, 1185, 1158, 1128, 1093, 1059, 1024, 984, 938, 893, 849, 801, 748, 691, 639, 586, 527, 463, 404, 347, 285, 218, 151, 91, 30, -36, -105, -160, -211, -270, -346, -412, -469, -525, -583, -643, -698, -747, -795, -847, -896, -940, -980, -1020, -1061, -1096, -1128, -1156, -1184, -1207, -1229, -1250, -1265, -1280, -1289, -1296, -1299, -1301, -1298, -1290, -1282, -1271, -1256, -1237, -1216, -1193, -1166, -1134, -1100, -1067, -1031, -989, -942, -899, -854, -805, -749, -694, -641, -587, -527, -463, -402, -343, -282, -214, -147, -83, -20, 43, 112, 177, 238, 297, 360, 424, 484, 540, 596, 655, 710, 763, 812, 860, 910, 956, 998, 1037, 1077, 1114, 1147, 1176, 1204, 1230, 1253, 1272, 1288, 1300, 1311, 1318, 1321, 1323, 1320, 1314, 1306, 1295, 1280, 1261, 1239, 1217, 1190, 1159, 1124, 1090, 1054, 1014, 968, 922, 878, 829, 775, 718, 664, 611, 551, 487, 425, 366, 306, 236, 168, 106, 44, -23, -93, -157, -216, -279, -345, -409, -467, -523, -583, -643, -699, -750, -800, -854, -903, -947, -989, -1030, -1072, -1108, -1141, -1170, -1200, -1227, -1250, -1267, -1285, -1300, -1310, -1317, -1321, -1322, -1320, -1314, -1306, -1295, -1280, -1260, -1239, -1217, -1190, -1158, -1123, -1091, -1054, -1012, -966, -921, -877, -826, -770, -714, -660, -606, -545, -481, -419, -359, -297, -229, -160, -95, -31, 32, 102, 169, 231, 291, 355, 420, 481, 537, 595, 654, 711, 765, 814, 863, 915, 962, 1004, 1044, 1085, 1123, 1157, 1186, 1215, 1243, 1266, 1285, 1301, 1315, 1326, 1334, 1337, 1338, 1337, 1331, 1323, 1313, 1297, 1279, 1258, 1235, 1208, 1177, 1143, 1108, 1072, 1031, 985, 939, 894, 846, 790, 733, 680, 626, 564, 500, 438, 380, 317, 248, 178, 116, 53, -15, -86, -150, -210, -274, -342, -405, -458, -509, -578, -642, -698, -751, -802, -855, -908, -952, -994, -1036, -1078, -1110, -1143, -1177, -1209, -1236, -1259, -1278, -1295, -1309, -1321, -1329, -1334, -1335, -1333, -1327, -1320, -1309, -1292, -1273, -1253, -1231, -1204, -1172, -1138, -1106, -1068, -1025, -978, -933, -889, -839, -782])
  
Q = 1e-5 # process variance  
  
# 分配数组空间  
xhat=np.zeros(sz)      # a posteri estimate of x 滤波估计值  
P=np.zeros(sz)         # a posteri error estimate滤波估计协方差矩阵  
xhatminus=np.zeros(sz) # a priori estimate of x 估计值  
Pminus=np.zeros(sz)    # a priori error estimate估计协方差矩阵  
K=np.zeros(sz)         # gain or blending factor卡尔曼增益  
  
R = 0.1**2 # estimate of measurement variance, change to see effect  
  
# intial guesses  
xhat[0] = 0.0  
P[0] = 1.0  
  
for k in range(1,n_iter):  
    # 预测  
    xhatminus[k] = xhat[k-1]  #X(k|k-1) = AX(k-1|k-1) + BU(k) + W(k),A=1,BU(k) = 0  
    Pminus[k] = P[k-1]+Q      #P(k|k-1) = AP(k-1|k-1)A' + Q(k) ,A=1  
  
    # 更新  
    K[k] = Pminus[k]/( Pminus[k]+R ) #Kg(k)=P(k|k-1)H'/[HP(k|k-1)H' + R],H=1  
    xhat[k] = xhatminus[k]+K[k]*(z[k]-xhatminus[k]) #X(k|k) = X(k|k-1) + Kg(k)[Z(k) - HX(k|k-1)], H=1  
    P[k] = (1-K[k])*Pminus[k] #P(k|k) = (1 - Kg(k)H)P(k|k-1), H=1  
  
pylab.figure(figsize=(16, 8))
pylab.subplot(211)
pylab.plot(z,'y',label='noisy measurements - I0')     #观测值  
pylab.plot(xhat,'b-',label='a posteri estimate - I0')  #滤波估计值  
pylab.axhline(x,color='g',label='truth value')    #真实值
#pylab.plot(data,'r',label='noisy measurements - U0')     #观测值--U0
pylab.legend()  
pylab.xlabel('Iteration')  
pylab.ylabel('Voltage')  
#
pylab.subplot(212)
pylab.plot(data,'r',label='noisy measurements')     #观测值--U0

"""  
pylab.figure()  
valid_iter = range(1,n_iter) # Pminus not valid at step 0  
pylab.plot(valid_iter,Pminus[valid_iter],label='a priori error estimate')  
pylab.xlabel('Iteration')  
pylab.ylabel('$(Voltage)^2$')  
pylab.setp(pylab.gca(),'ylim',[0,.01])  
pylab.show()
"""